openapi: 3.0.1
info:
  title: SmartMoving External API
  description: ' [Component filtering: 154 -> 135 components, 135 used, 19 removed]'
  version: v1
servers:
  - url: https://api-public.smartmoving.com/v1
paths:
  '/api/customers/{customerId}':
    get:
      tags:
        - customers
        - basic
      summary: Get customer by Id
      description: Get single customer by Id
      operationId: get-api-customers-customerid
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerViewModel'
              example:
                id: string
                name: string
                phoneNumber: string
                phoneType: { }
                emailAddress: string
                address: string
                secondaryPhoneNumbers:
                  - phoneNumber: string
                    phoneType: { }
        '400':
          description: Customer not found
  /api/ping:
    get:
      tags:
        - ping
      summary: /api/ping - GET
      operationId: get-api-ping
      responses:
        '200':
          description: OK
  '/api/customers/{customerId}/opportunities':
    get:
      tags:
        - opportunities
        - basic
      summary: Get opportunities by customer Id
      description: Get opportunities by customer Id
      operationId: get-api-customers-customerid-opportunities
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Page result of Opportunities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerOpportunityViewModel'
              example:
                - id: string
                  quoteNumber: string
                  serviceDate: 0
                  status: { }
                  createdAtUtc: string
        '400':
          description: Customer doesn't exist
  '/api/customers/{customerId}/storage-accounts':
    get:
      tags:
        - customers
        - basic
      summary: Get storage accounts by customer Id
      description: Get storage accounts by customer Id
      operationId: get-api-customers-customerid-storage-accounts
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Storage accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerStorageAccountViewModel'
              example:
                - id: string
                  accountNumber: string
                  status: { }
                  jobId: string
                  storageType: { }
                  storageBillingPreOrPostPay: { }
                  storageAndValuationTotal: 0
                  totalMonthlyCharges: 0
                  storageValuationMethod: { }
                  nextInvoiceAt: string
                  discounts:
                    - name: string
                      storageDiscountType: { }
                      discountAmountType: { }
                      amount: 0
                  warehouseSalesTaxRate: 0
                  warehouseName: string
        '400':
          description: Customer doesn't exist
  '/api/opportunities/{opportunityId}':
    get:
      tags:
        - opportunities
        - basic
      summary: Get opportunity details
      description: Get detailed information about an opportunity
      operationId: get-api-opportunities-opportunityid
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: IncludeTripInfo
          in: query
          schema:
            type: boolean
        - name: IncludePayments
          in: query
          schema:
            type: boolean
        - name: IncludeSurveys
          in: query
          schema:
            type: boolean
        - name: IncludeJobAddresses
          in: query
          description: 'List of jobâ€™s addresses/stops, returned in the order they were stored going from Origin, to Destination.'
          schema:
            type: boolean
        - name: IncludeTasks
          in: query
          schema:
            type: boolean
        - name: IncludeFiles
          in: query
          schema:
            type: boolean
        - name: IncludePhotos
          in: query
          schema:
            type: boolean
        - name: IncludeDocuments
          in: query
          schema:
            type: boolean
        - name: IncludeCharges
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Opportunity details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpportunityDetailsViewModel'
              example:
                id: string
                quoteNumber: 0
                customer:
                  id: string
                  name: string
                  emailAddress: string
                  phoneNumber: string
                  phoneType: { }
                branch:
                  name: string
                  phoneNumber: string
                contacts:
                  - name: string
                    emailAddress: string
                    phoneNumber: string
                    phoneType: { }
                opportunityType: { }
                type: { }
                serviceDate: 0
                status: { }
                leadStatus: string
                moveSize:
                  name: string
                  description: string
                  volume: 0
                volume: 0
                weight: 0
                volumeWeightCalculationMode: { }
                estimatedTotal:
                  subtotal: 0
                  taxableAmount: 0
                  tax: 0
                  finalTotal: 0
                estimator:
                  name: string
                  mobileNumber: string
                  branchId: string
                  regionId: string
                  title: string
                salesAssignee:
                  id: string
                  name: string
                hasTripInfo: true
                referralSource: string
                allowInventoryUpdates: true
                jobs:
                  - id: string
                    jobNumber: string
                    jobDate: 0
                    type: { }
                    confirmed: true
                    jobAddresses:
                      - string
                    jobDocuments:
                      - title: string
                        type: { }
                        isComplete: true
                    estimatedCharges:
                      - name: string
                        chargeCategory: 0
                        description: string
                        editableDescription: string
                        sortOrder: 0
                        subtotal: 0
                        discountAmount: 0
                        totalCost: 0
                    actualCharges:
                      - name: string
                        chargeCategory: 0
                        description: string
                        editableDescription: string
                        sortOrder: 0
                        subtotal: 0
                        discountAmount: 0
                        totalCost: 0
                payments:
                  - source: { }
                    paymentType: { }
                    amount: 0
                    takenByUser: string
                    isOutstanding: true
                    paidAtUtc: string
                    refundsJobPaymentId: string
                    amountRefunded: 0
                    paymentCategory: { }
                tripInfo:
                  isTripInfoApplied: true
                  pickupSpreadFirstAvailableDate: 0
                  pickupSpreadLastAvailableDate: 0
                  confirmedPickupDate: 0
                  preferredPickupTime: 0
                  preferredPickupTimeDurationMinutes: 0
                  deliverySpreadFirstAvailableDate: 0
                  deliverySpreadLastAvailableDate: 0
                  confirmedDeliveryDate: 0
                  preferredDeliveryTime: 0
                  preferredDeliveryTimeDurationMinutes: 0
                opportunityFiles:
                  - string
                photos:
                  - string
                opportunityDocuments:
                  - title: string
                    type: { }
                    isComplete: true
                surveys:
                  - assignedTo:
                      name: string
                      mobileNumber: string
                      branchId: string
                      regionId: string
                      title: string
                    type: { }
                    title: string
                    startAtUtc: string
                    durationMinutes: 0
                    notes: string
                    isConfirmed: true
                tasks:
                  - title: string
                    customer:
                      id: string
                      name: string
                      emailAddress: string
                      phoneNumber: string
                      phoneType: { }
                    assignedTo:
                      name: string
                      mobileNumber: string
                      branchId: string
                      regionId: string
                      title: string
                    taskItemType: { }
                    taskItemStatus: { }
                    notes: string
                tariff:
                  id: string
                  name: string
        '400':
          description: Opportunity not found
  '/api/payments/opportunities/{opportunityId}':
    get:
      tags:
        - opportunities
        - basic
      summary: Get payments by opportunity Id
      description: Get opportunity payments by opportunity Id
      operationId: get-api-payments-opportunities-opportunityid
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Job
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobPaymentViewModel'
              example:
                - id: string
                  opportunityId: string
                  jobId: string
                  source: { }
                  paymentType: { }
                  amount: 0
                  takenByUserId: string
                  createdAtUtc: string
                  customPaymentDescription: string
                  gatewayPaymentId: string
                  refundsJobPaymentId: string
                  amountRefunded: 0
                  paymentCategory: { }
                  isRefund: true
        '400':
          description: Opportunity not found
  /api/leads:
    get:
      tags:
        - leads
        - basic
      summary: Get leads
      description: Get leads
      operationId: get-api-leads
      parameters:
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Leads
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageViewModel_LeadViewModel'
              example:
                pageNumber: 0
                pageSize: 0
                lastPage: true
                totalPages: 0
                totalResults: 0
                totalThisPage: 0
                pageResults:
                  - id: string
                    customerName: string
                    emailAddress: string
                    referralSource: string
                    referralSourceName: string
                    affiliateName: string
                    phoneNumber: string
                    phoneType: { }
                    serviceDate: 0
                    salesPersonId: string
                    salesPerson: string
                    type: { }
                    branchId: string
                    branchName: string
                    originAddressFull: string
                    originStreet: string
                    originCity: string
                    originState: string
                    originZip: string
                    destinationAddressFull: string
                    destinationStreet: string
                    destinationCity: string
                    destinationState: string
                    destinationZip: string
                    moveSizeId: string
                    moveSizeName: string
                    createdAtUtc: string
  '/api/leads/{leadId}':
    get:
      tags:
        - leads
        - basic
      summary: Get lead by Id
      description: Get single lead by Id
      operationId: get-api-leads-leadid
      parameters:
        - name: leadId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Lead
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadViewModel'
              example:
                id: string
                customerName: string
                emailAddress: string
                referralSource: string
                referralSourceName: string
                affiliateName: string
                phoneNumber: string
                phoneType: { }
                serviceDate: 0
                salesPersonId: string
                salesPerson: string
                type: { }
                branchId: string
                branchName: string
                originAddressFull: string
                originStreet: string
                originCity: string
                originState: string
                originZip: string
                destinationAddressFull: string
                destinationStreet: string
                destinationCity: string
                destinationState: string
                destinationZip: string
                moveSizeId: string
                moveSizeName: string
                createdAtUtc: string
        '400':
          description: Lead not found
  /api/leads/statuses:
    get:
      tags:
        - leads
        - basic
      summary: Get statuses
      description: Get statuses
      operationId: get-api-leads-statuses
      responses:
        '200':
          description: Statuses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeadViewModel'
              example:
                - id: string
                  customerName: string
                  emailAddress: string
                  referralSource: string
                  referralSourceName: string
                  affiliateName: string
                  phoneNumber: string
                  phoneType: { }
                  serviceDate: 0
                  salesPersonId: string
                  salesPerson: string
                  type: { }
                  branchId: string
                  branchName: string
                  originAddressFull: string
                  originStreet: string
                  originCity: string
                  originState: string
                  originZip: string
                  destinationAddressFull: string
                  destinationStreet: string
                  destinationCity: string
                  destinationState: string
                  destinationZip: string
                  moveSizeId: string
                  moveSizeName: string
                  createdAtUtc: string
  '/api/opportunities/{opportunityId}/audit-activity':
    get:
      tags:
        - opportunities
        - basic
      summary: Get audit activity for opportunity
      description: Get audit activity for opportunity
      operationId: get-api-opportunities-opportunityid-audit-activity
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Opportunity audit activity
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OpportunityAuditActivityEntryViewModel'
              example:
                - id: string
                  activityType: { }
                  description: string
                  changeMadeByUserId: string
                  createdAtUtc: string
        '400':
          description: Opportunity not found
  '/api/opportunities/{opportunityId}/jobs':
    get:
      tags:
        - opportunities
        - basic
      summary: Get jobs by opportunityId
      description: Get jobs by Opportunity Id
      operationId: get-api-opportunities-opportunityid-jobs
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Job
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BasicJobViewModel'
              example:
                - id: string
                  type: { }
                  jobNumber: string
                  jobDate: 0
                  startTimeUtc: string
                  endTimeUtc: string
                  completedAtUtc: string
                  confirmedAtUtc: string
                  closedAtUtc: string
        '400':
          description: Opportunity not found
  /api/customers:
    get:
      tags:
        - customers
        - basic
      summary: Get all customers
      description: 'Get a list of all customers ordered by name. Optionally, you can filter them based on the job service date associated with each customer''s opportunities. When filtered using service date(s), by default the opportunity info is included, to exclude it set IncludeOpportunityInfo = False.'
      operationId: get-api-customers
      parameters:
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: FromServiceDate
          in: query
          description: 'Format: yyyyMMdd, eg. 20240831'
          schema:
            type: integer
            format: yyyyMMdd
        - name: ToServiceDate
          in: query
          description: 'Format: yyyyMMdd, eg. 20240831'
          schema:
            type: integer
            format: yyyyMMdd
        - name: IncludeOpportunityInfo
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetAllCustomersViewModel'
              example:
                - id: string
                  opportunities:
                    - id: string
                      quoteNumber: string
                      status: { }
                      jobs:
                        - id: string
                          jobNumber: string
                          serviceDate: string
                          type: { }
                  name: string
                  phoneNumber: string
                  phoneType: { }
                  emailAddress: string
                  address: string
                  secondaryPhoneNumbers:
                    - phoneNumber: string
                      phoneType: { }
  '/api/opportunities/quote/{quoteNumber}':
    get:
      tags:
        - opportunities
        - basic
      summary: Get opportunity details by quote number
      description: Get detailed information about an opportunity
      operationId: get-api-opportunities-quote-quotenumber
      parameters:
        - name: quoteNumber
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: IncludeTripInfo
          in: query
          schema:
            type: boolean
        - name: IncludePayments
          in: query
          schema:
            type: boolean
        - name: IncludeSurveys
          in: query
          schema:
            type: boolean
        - name: IncludeJobAddresses
          in: query
          description: 'List of jobâ€™s addresses/stops, returned in the order they were stored going from Origin, to Destination.'
          schema:
            type: boolean
        - name: IncludeTasks
          in: query
          schema:
            type: boolean
        - name: IncludeFiles
          in: query
          schema:
            type: boolean
        - name: IncludePhotos
          in: query
          schema:
            type: boolean
        - name: IncludeDocuments
          in: query
          schema:
            type: boolean
        - name: IncludeCharges
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Opportunity details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpportunityDetailsViewModel'
              example:
                id: string
                quoteNumber: 0
                customer:
                  id: string
                  name: string
                  emailAddress: string
                  phoneNumber: string
                  phoneType: { }
                branch:
                  name: string
                  phoneNumber: string
                contacts:
                  - name: string
                    emailAddress: string
                    phoneNumber: string
                    phoneType: { }
                opportunityType: { }
                type: { }
                serviceDate: 0
                status: { }
                leadStatus: string
                moveSize:
                  name: string
                  description: string
                  volume: 0
                volume: 0
                weight: 0
                volumeWeightCalculationMode: { }
                estimatedTotal:
                  subtotal: 0
                  taxableAmount: 0
                  tax: 0
                  finalTotal: 0
                estimator:
                  name: string
                  mobileNumber: string
                  branchId: string
                  regionId: string
                  title: string
                salesAssignee:
                  id: string
                  name: string
                hasTripInfo: true
                referralSource: string
                allowInventoryUpdates: true
                jobs:
                  - id: string
                    jobNumber: string
                    jobDate: 0
                    type: { }
                    confirmed: true
                    jobAddresses:
                      - string
                    jobDocuments:
                      - title: string
                        type: { }
                        isComplete: true
                    estimatedCharges:
                      - name: string
                        chargeCategory: 0
                        description: string
                        editableDescription: string
                        sortOrder: 0
                        subtotal: 0
                        discountAmount: 0
                        totalCost: 0
                    actualCharges:
                      - name: string
                        chargeCategory: 0
                        description: string
                        editableDescription: string
                        sortOrder: 0
                        subtotal: 0
                        discountAmount: 0
                        totalCost: 0
                payments:
                  - source: { }
                    paymentType: { }
                    amount: 0
                    takenByUser: string
                    isOutstanding: true
                    paidAtUtc: string
                    refundsJobPaymentId: string
                    amountRefunded: 0
                    paymentCategory: { }
                tripInfo:
                  isTripInfoApplied: true
                  pickupSpreadFirstAvailableDate: 0
                  pickupSpreadLastAvailableDate: 0
                  confirmedPickupDate: 0
                  preferredPickupTime: 0
                  preferredPickupTimeDurationMinutes: 0
                  deliverySpreadFirstAvailableDate: 0
                  deliverySpreadLastAvailableDate: 0
                  confirmedDeliveryDate: 0
                  preferredDeliveryTime: 0
                  preferredDeliveryTimeDurationMinutes: 0
                opportunityFiles:
                  - string
                photos:
                  - string
                opportunityDocuments:
                  - title: string
                    type: { }
                    isComplete: true
                surveys:
                  - assignedTo:
                      name: string
                      mobileNumber: string
                      branchId: string
                      regionId: string
                      title: string
                    type: { }
                    title: string
                    startAtUtc: string
                    durationMinutes: 0
                    notes: string
                    isConfirmed: true
                tasks:
                  - title: string
                    customer:
                      id: string
                      name: string
                      emailAddress: string
                      phoneNumber: string
                      phoneType: { }
                    assignedTo:
                      name: string
                      mobileNumber: string
                      branchId: string
                      regionId: string
                      title: string
                    taskItemType: { }
                    taskItemStatus: { }
                    notes: string
                tariff:
                  id: string
                  name: string
        '400':
          description: Opportunity not found
  /api/premium/customers:
    post:
      tags:
        - customers
        - premium
      summary: Create a customer
      description: Create a customer
      operationId: post-api-premium-customers
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CustomerModel'
            example:
              name: string
              phoneNumber: string
              phoneType: { }
              emailAddress: string
              address: string
              secondaryPhoneNumbers:
                - phoneNumber: string
                  phoneType: { }
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CustomerModel'
            example:
              name: string
              phoneNumber: string
              phoneType: { }
              emailAddress: string
              address: string
              secondaryPhoneNumbers:
                - phoneNumber: string
                  phoneType: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CustomerModel'
            example:
              name: string
              phoneNumber: string
              phoneType: { }
              emailAddress: string
              address: string
              secondaryPhoneNumbers:
                - phoneNumber: string
                  phoneType: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CustomerModel'
            example:
              name: string
              phoneNumber: string
              phoneType: { }
              emailAddress: string
              address: string
              secondaryPhoneNumbers:
                - phoneNumber: string
                  phoneType: { }
      responses:
        '200':
          description: Customer Id
          content:
            application/json:
              schema:
                type: string
                format: uuid
              example: string
  '/api/premium/customers/{customerId}':
    put:
      tags:
        - customers
        - premium
      summary: Update a customer
      description: Update a customer
      operationId: put-api-premium-customers-customerid
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CustomerModel'
            example:
              name: string
              phoneNumber: string
              phoneType: { }
              emailAddress: string
              address: string
              secondaryPhoneNumbers:
                - phoneNumber: string
                  phoneType: { }
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CustomerModel'
            example:
              name: string
              phoneNumber: string
              phoneType: { }
              emailAddress: string
              address: string
              secondaryPhoneNumbers:
                - phoneNumber: string
                  phoneType: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CustomerModel'
            example:
              name: string
              phoneNumber: string
              phoneType: { }
              emailAddress: string
              address: string
              secondaryPhoneNumbers:
                - phoneNumber: string
                  phoneType: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CustomerModel'
            example:
              name: string
              phoneNumber: string
              phoneType: { }
              emailAddress: string
              address: string
              secondaryPhoneNumbers:
                - phoneNumber: string
                  phoneType: { }
      responses:
        '200':
          description: Success
        '400':
          description: Customer not found
  '/api/premium/customers/{customerId}/service-tickets':
    get:
      tags:
        - customers
      summary: Get service tickets by customer Id
      description: Get service tickets by customer Id
      operationId: get-api-premium-customers-customerid-service-tickets
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Service tickets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerServiceTicketViewModel'
              example:
                - id: string
                  jobId: string
                  name: string
                  type: { }
                  status: { }
                  priority: { }
                  createdAtUtc: string
        '400':
          description: Customer doesn't exist
  /api/premium/customers/search:
    get:
      tags:
        - customers
        - premium
      summary: 'Search customers by name, email address or phone number'
      description: 'Search customers by name, email address or phone number'
      operationId: get-api-premium-customers-search
      parameters:
        - name: searchQuery
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Matching customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerViewModel'
              example:
                - id: string
                  name: string
                  phoneNumber: string
                  phoneType: { }
                  emailAddress: string
                  address: string
                  secondaryPhoneNumbers:
                    - phoneNumber: string
                      phoneType: { }
        '400':
          description: Search query is less than 3 characters
  '/api/premium/leads/sales/{salesPersonId}':
    get:
      tags:
        - leads
        - premium
      summary: Get leads by sales person Id
      description: Get leads by sales person Id
      operationId: get-api-premium-leads-sales-salespersonid
      parameters:
        - name: salesPersonId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Leads
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageViewModel_LeadViewModel'
              example:
                pageNumber: 0
                pageSize: 0
                lastPage: true
                totalPages: 0
                totalResults: 0
                totalThisPage: 0
                pageResults:
                  - id: string
                    customerName: string
                    emailAddress: string
                    referralSource: string
                    referralSourceName: string
                    affiliateName: string
                    phoneNumber: string
                    phoneType: { }
                    serviceDate: 0
                    salesPersonId: string
                    salesPerson: string
                    type: { }
                    branchId: string
                    branchName: string
                    originAddressFull: string
                    originStreet: string
                    originCity: string
                    originState: string
                    originZip: string
                    destinationAddressFull: string
                    destinationStreet: string
                    destinationCity: string
                    destinationState: string
                    destinationZip: string
                    moveSizeId: string
                    moveSizeName: string
                    createdAtUtc: string
  '/api/premium/opportunities/{opportunityId}/followups':
    get:
      tags:
        - opportunities
        - premium
      summary: Get follow-ups
      description: Get all follow-ups for a given opportunity
      operationId: get-api-premium-opportunities-opportunityid-followups
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of follow-ups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FollowUpViewModel'
              example:
                - id: string
                  opportunityId: string
                  type: { }
                  title: string
                  assignedToId: string
                  dueDateTime: string
                  completedAtUtc: string
                  notes: string
                  completed: true
        '400':
          description: Opportunity not found
    post:
      tags:
        - opportunities
        - premium
      summary: Create follow-up
      description: Create follow-up for opportunityId
      operationId: post-api-premium-opportunities-opportunityid-followups
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/FollowUpModel'
            example:
              type: { }
              title: string
              assignedToId: string
              dueDateTime: string
              completedAtUtc: string
              notes: string
              completed: true
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/FollowUpModel'
            example:
              type: { }
              title: string
              assignedToId: string
              dueDateTime: string
              completedAtUtc: string
              notes: string
              completed: true
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/FollowUpModel'
            example:
              type: { }
              title: string
              assignedToId: string
              dueDateTime: string
              completedAtUtc: string
              notes: string
              completed: true
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/FollowUpModel'
            example:
              type: { }
              title: string
              assignedToId: string
              dueDateTime: string
              completedAtUtc: string
              notes: string
              completed: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowUpViewModel'
              example:
                id: string
                opportunityId: string
                type: { }
                title: string
                assignedToId: string
                dueDateTime: string
                completedAtUtc: string
                notes: string
                completed: true
        '400':
          description: Opportunity not found
  '/api/premium/opportunities/{opportunityId}/followups/{followupId}':
    get:
      tags:
        - opportunities
        - premium
      summary: Get follow-up by id
      description: Get single follow-up for opportunityId and follow-up Id
      operationId: get-api-premium-opportunities-opportunityid-followups-followupid
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: followupId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Follow-up
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowUpViewModel'
              example:
                id: string
                opportunityId: string
                type: { }
                title: string
                assignedToId: string
                dueDateTime: string
                completedAtUtc: string
                notes: string
                completed: true
        '400':
          description: Followup not found
    put:
      tags:
        - opportunities
        - premium
      summary: Update follow-up
      description: Update single follow-up for opportunityId and follow-up Id
      operationId: put-api-premium-opportunities-opportunityid-followups-followupid
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: followupId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/FollowUpModel'
            example:
              type: { }
              title: string
              assignedToId: string
              dueDateTime: string
              completedAtUtc: string
              notes: string
              completed: true
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/FollowUpModel'
            example:
              type: { }
              title: string
              assignedToId: string
              dueDateTime: string
              completedAtUtc: string
              notes: string
              completed: true
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/FollowUpModel'
            example:
              type: { }
              title: string
              assignedToId: string
              dueDateTime: string
              completedAtUtc: string
              notes: string
              completed: true
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/FollowUpModel'
            example:
              type: { }
              title: string
              assignedToId: string
              dueDateTime: string
              completedAtUtc: string
              notes: string
              completed: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowUpViewModel'
              example:
                id: string
                opportunityId: string
                type: { }
                title: string
                assignedToId: string
                dueDateTime: string
                completedAtUtc: string
                notes: string
                completed: true
        '400':
          description: Followup not found
    delete:
      tags:
        - opportunities
        - premium
      summary: Delete follow-up by id
      description: Delete single follow-up for opportunityId and follow-up Id
      operationId: delete-api-premium-opportunities-opportunityid-followups-followupid
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: followupId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
        '400':
          description: Followup not found
  '/api/premium/opportunities/{opportunityId}/followups/{followupId}/mark-complete':
    post:
      tags:
        - opportunities
        - premium
      summary: Mark follow-up completed
      description: Mark an opportunity follow-up as completed
      operationId: post-api-premium-opportunities-opportunityid-followups-followupid-mark-compl
      parameters:
        - name: followupId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Follow-up marked as complete
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowUpViewModel'
              example:
                id: string
                opportunityId: string
                type: { }
                title: string
                assignedToId: string
                dueDateTime: string
                completedAtUtc: string
                notes: string
                completed: true
        '400':
          description: Follow-up not found
  '/api/premium/opportunities/{opportunityId}/jobs':
    post:
      tags:
        - opportunities
        - premium
      summary: Create job
      description: Create job for opportunity
      operationId: post-api-premium-opportunities-opportunityid-jobs
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/QuoteAddJobForm'
            example:
              serviceType: { }
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/QuoteAddJobForm'
            example:
              serviceType: { }
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/QuoteAddJobForm'
            example:
              serviceType: { }
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/QuoteAddJobForm'
            example:
              serviceType: { }
      responses:
        '201':
          description: Created
        '404':
          description: Not Found
        '400':
          description: Opportunity not found
  '/api/premium/opportunities/{opportunityId}/jobs/{jobId}':
    get:
      tags:
        - opportunities
        - premium
      summary: Get job by id
      description: Get job details by Id
      operationId: get-api-premium-opportunities-opportunityid-jobs-jobid
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: IncludeEstimatedCharges
          in: query
          schema:
            type: boolean
        - name: IncludeActualCharges
          in: query
          schema:
            type: boolean
        - name: IncludeEstimatedMaterials
          in: query
          schema:
            type: boolean
        - name: IncludeActualMaterials
          in: query
          schema:
            type: boolean
        - name: IncludeStops
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobViewModel'
              example:
                opportunityId: string
                arrivalWindow: string
                dropOffDate: 0
                stops:
                  - id: string
                    isOrigin: true
                    isDestination: true
                    order: 0
                    addressFullAddress: string
                    addressLat: 0
                    addressLng: 0
                    addressUnit: string
                    propertyName: string
                    propertyType: { }
                    stairs: 0
                    parkingDescription: string
                    hasElevator: true
                    notes: string
                estimatedCharges:
                  - id: string
                    name: string
                    chargeCategory: { }
                    chargeType: { }
                    subtotal: 0
                    discountAmount: 0
                    discountPercent: 0
                    quantity: 0
                    totalCost: 0
                actualCharges:
                  - estimatedJobChargeId: string
                    estimatedJobCharge:
                      id: string
                      name: string
                      chargeCategory: { }
                      chargeType: { }
                      subtotal: 0
                      discountAmount: 0
                      discountPercent: 0
                      quantity: 0
                      totalCost: 0
                    id: string
                    name: string
                    chargeCategory: { }
                    chargeType: { }
                    subtotal: 0
                    discountAmount: 0
                    discountPercent: 0
                    quantity: 0
                    totalCost: 0
                estimatedMaterials:
                  - id: string
                    name: string
                    description: string
                    materialsQuantity: 0
                    materialsRate: 0
                    packingQuantity: 0
                    packingRate: 0
                    packingTimeMinutes: 0
                    unpackingQuantity: 0
                    unpackingRate: 0
                    unpackingTimeMinutes: 0
                    isContainer: true
                actualMaterials:
                  - id: string
                    name: string
                    description: string
                    materialsQuantity: 0
                    materialsRate: 0
                    packingQuantity: 0
                    packingRate: 0
                    packingTimeMinutes: 0
                    unpackingQuantity: 0
                    unpackingRate: 0
                    unpackingTimeMinutes: 0
                    isContainer: true
                id: string
                type: { }
                jobNumber: string
                jobDate: 0
                startTimeUtc: string
                endTimeUtc: string
                completedAtUtc: string
                confirmedAtUtc: string
                closedAtUtc: string
        '400':
          description: Job not found
    delete:
      tags:
        - opportunities
        - premium
      summary: Delete job
      description: Remove job from opportunity
      operationId: delete-api-premium-opportunities-opportunityid-jobs-jobid
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
        '400':
          description: Opportunity not found
  '/api/premium/opportunities/{opportunityId}/jobs/{jobId}/confirm':
    post:
      tags:
        - opportunities
        - premium
      summary: Confirm a job
      description: Confirm a job by jobId and category (optional)
      operationId: post-api-premium-opportunities-opportunityid-jobs-jobid-confirm
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: category
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Job not found
  '/api/premium/payments/storage-accounts/{storageAccountId}':
    get:
      tags:
        - opportunities
        - premium
      summary: Get payments by storage account Id
      description: Get storage payments by storage account Id
      operationId: get-api-premium-payments-storage-accounts-storageaccountid
      parameters:
        - name: storageAccountId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Job
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StorageAccountPaymentViewModel'
              example:
                - id: string
                  storageAccountId: string
                  source: { }
                  paymentType: { }
                  createdAtUtc: string
                  amount: 0
                  balance: 0
                  takenByUserId: string
                  description: string
                  gatewayPaymentId: string
                  refundsPaymentId: string
                  amountRefunded: 0
                  isRefund: true
        '400':
          description: Storage account not found
  '/api/premium/opportunities/{opportunityId}/documents':
    get:
      tags:
        - opportunities
        - premium
      summary: Get documents
      description: Get all (opportunity and job) documents for a given opportunity
      operationId: get-api-premium-opportunities-opportunityid-documents
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of opportunity and job documents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentViewModel'
              example:
                opportunityDocuments:
                  - id: string
                    title: string
                    isComplete: true
                    url: string
                jobDocuments:
                  - jobId: string
                    id: string
                    title: string
                    isComplete: true
                    url: string
        '400':
          description: Opportunity not found
  '/api/premium/opportunities/{opportunityId}/inventory':
    get:
      tags:
        - opportunities
        - premium
      summary: Get opportunity inventory
      description: Get detailed information about opportunity inventory
      operationId: get-api-premium-opportunities-opportunityid-inventory
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Opportunity inventory
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpportunityInventoryViewModel'
              example:
                id: string
                createdAtUtc: string
                lastModifiedById: string
                lastModifiedFromApplication: { }
                densityFactor: 0
                boxes:
                  - id: string
                    name: string
                    description: string
                    shortCode: 0
                    notes: string
                    volume: 0
                    weight: 0
                    imageUrl: string
                    quantity: 0
                    inventoryItemId: string
                rooms:
                  - id: string
                    name: string
                    description: string
                    roomType: string
                    items:
                      - id: string
                        name: string
                        description: string
                        notes: string
                        shortCode: 0
                        quantity: 0
                        volume: 0
                        weight: 0
                        width: 0
                        depth: 0
                        height: 0
                        type: { }
                        inventoryItemId: string
                        imageUrls:
                          - string
                lockStatus: true
        '400':
          description: Opportunity not found
  '/api/premium/opportunities/{opportunityId}/attachments':
    post:
      tags:
        - opportunities
        - premium
      summary: Add attachment to opportunity
      description: "Attaches a file to an opportunity. File must be of type '.doc', '.docx', '.xls', '.xlsx', '.pdf', '.txt', '.csv', '.png', '.jpeg', or '.jpg'. The\r\n                       file content must be a Base64 encoded byte array. The documents category does not accept image files."
      operationId: post-api-premium-opportunities-opportunityid-attachments
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/OpportunityAttachmentViewModel'
            example:
              base64Contents: string
              fileName: string
              category: { }
              notes: string
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/OpportunityAttachmentViewModel'
            example:
              base64Contents: string
              fileName: string
              category: { }
              notes: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/OpportunityAttachmentViewModel'
            example:
              base64Contents: string
              fileName: string
              category: { }
              notes: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/OpportunityAttachmentViewModel'
            example:
              base64Contents: string
              fileName: string
              category: { }
              notes: string
      responses:
        '201':
          description: File attached to opportunity
        '400':
          description: File failed to be attached to the opportunity
  '/api/premium/opportunities/{opportunityId}/inventory/rooms/{roomId}':
    post:
      tags:
        - opportunities
        - premium
      summary: Add inventory to an opportunity
      description: 'Add items to an existing opportunity: Include the ID if you want to add inventory from your master list, or create a custom inventory through the Name. Each custom inventory created can also be added to the master inventory list if desired.'
      operationId: post-api-premium-opportunities-opportunityid-inventory-rooms-roomid
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: roomId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CustomItemToInventoryForm'
            example:
              items:
                - id: string
                  name: string
                  description: string
                  notes: string
                  volume: 0
                  weight: 0
                  quantity: 0
                  quantityNotGoing: 0
                  saveToMaster: false
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CustomItemToInventoryForm'
            example:
              items:
                - id: string
                  name: string
                  description: string
                  notes: string
                  volume: 0
                  weight: 0
                  quantity: 0
                  quantityNotGoing: 0
                  saveToMaster: false
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CustomItemToInventoryForm'
            example:
              items:
                - id: string
                  name: string
                  description: string
                  notes: string
                  volume: 0
                  weight: 0
                  quantity: 0
                  quantityNotGoing: 0
                  saveToMaster: false
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CustomItemToInventoryForm'
            example:
              items:
                - id: string
                  name: string
                  description: string
                  notes: string
                  volume: 0
                  weight: 0
                  quantity: 0
                  quantityNotGoing: 0
                  saveToMaster: false
      responses:
        '200':
          description: Item(s) added to room
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomItemToInventoryResponseViewModel'
              example:
                - id: string
                  name: string
                  quantity: 0
        '400':
          description: 'Failed to add custom item(s) to room due to bad request object, or inventory or room not found'
  '/api/premium/opportunities/{opportunityId}/inventory/rooms/{roomId}/items/{inventoryItemId}':
    put:
      tags:
        - opportunities
        - premium
      summary: Update opportunity inventory
      description: Update opportunity inventory
      operationId: put-api-premium-opportunities-opportunityid-inventory-rooms-roomid-items-inv
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: roomId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: inventoryItemId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CustomItemUpdateModel'
            example:
              notes: string
              volume: 0
              weight: 0
              quantity: 0
              quantityNotGoing: 0
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CustomItemUpdateModel'
            example:
              notes: string
              volume: 0
              weight: 0
              quantity: 0
              quantityNotGoing: 0
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CustomItemUpdateModel'
            example:
              notes: string
              volume: 0
              weight: 0
              quantity: 0
              quantityNotGoing: 0
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CustomItemUpdateModel'
            example:
              notes: string
              volume: 0
              weight: 0
              quantity: 0
              quantityNotGoing: 0
      responses:
        '200':
          description: Item successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomItemToInventoryResponseViewModel'
              example:
                id: string
                name: string
                quantity: 0
        '400':
          description: Item failed to update.
    delete:
      tags:
        - opportunities
        - premium
      summary: Remove opportunity inventory
      description: Remove opportunity inventory
      operationId: delete-api-premium-opportunities-opportunityid-inventory-rooms-roomid-items
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: roomId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: inventoryItemId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Item successfully deleted
        '400':
          description: Item failed to be deleted.
  /api/branches:
    get:
      tags:
        - basic
      summary: Get branches
      description: 'Get all your company branches, alongside their dispatch location, and phone number.'
      operationId: get-api-branches
      parameters:
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: branches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageViewModel_BranchListViewModel'
              example:
                pageNumber: 0
                pageSize: 0
                lastPage: true
                totalPages: 0
                totalResults: 0
                totalThisPage: 0
                pageResults:
                  - id: string
                    name: string
                    phoneNumber: string
                    dispatchLocation:
                      fullAddress: string
                      street: string
                      city: string
                      state: string
                      zip: string
                      lat: 0
                      lng: 0
                    isPrimary: true
  /api/move-sizes:
    get:
      tags:
        - basic
      summary: Get move sizes
      description: 'Get all the move sizes that are stored in your company, alongside their description, cubic feet, and weight.'
      operationId: get-api-move-sizes
      parameters:
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Move sizes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageViewModel_MoveSizeListViewModel'
              example:
                pageNumber: 0
                pageSize: 0
                lastPage: true
                totalPages: 0
                totalResults: 0
                totalThisPage: 0
                pageResults:
                  - id: string
                    name: string
                    description: string
                    volume: 0
                    weight: 0
  /api/premium/inventory:
    get:
      tags:
        - premium
      summary: Get master inventory list
      description: 'Get the master inventory list with all the relevant information, and use its IDs to add inventory items.'
      operationId: get-api-premium-inventory
      parameters:
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Inventory
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageViewModel_InventoryItemViewModel'
              example:
                pageNumber: 0
                pageSize: 0
                lastPage: true
                totalPages: 0
                totalResults: 0
                totalThisPage: 0
                pageResults:
                  - id: string
                    name: string
                    description: string
                    shortCode: 0
                    volume: 0
                    weight: 0
  /api/referral-sources:
    get:
      tags:
        - basic
      summary: Get referral sources
      description: 'Get all of your accountâ€™s referral sources, with the option to retrieve all of them or only your public ones (users on public lead forms you might have embedded on your website). If desired, you can also include your active lead providers in the response.'
      operationId: get-api-referral-sources
      parameters:
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: includePrivate
          in: query
          schema:
            type: boolean
            default: false
        - name: includeLeadProviders
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Referral sources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageViewModel_ReferralSourceViewModel'
              example:
                pageNumber: 0
                pageSize: 0
                lastPage: true
                totalPages: 0
                totalResults: 0
                totalThisPage: 0
                pageResults:
                  - id: string
                    name: string
                    isLeadProvider: true
                    isPublic: true
  /api/service-types:
    get:
      tags:
        - basic
      summary: Get service types
      description: 'Get all your enabled service types, both system and custom ones.'
      operationId: get-api-service-types
      parameters:
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: service types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageViewModel_ServiceTypeViewModel'
              example:
                pageNumber: 0
                pageSize: 0
                lastPage: true
                totalPages: 0
                totalResults: 0
                totalThisPage: 0
                pageResults:
                  - id: { }
                    name: string
                    scalingFactorPercentage: 0
                    hasActivityLoading: true
                    hasActivityFinishedLoading: true
                    hasActivityUnloading: true
                    order: 0
  /api/tariffs:
    get:
      tags:
        - basic
      summary: Get tariffs
      description: 'Get all the tariffs within your company, with the option to include disabled tariffs or not.'
      operationId: get-api-tariffs
      parameters:
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: IncludeDisabled
          in: query
          schema:
            type: boolean
        - name: IncludeTechMate
          in: query
          description: Include external tariffs created on TechMate in the response.
          schema:
            type: boolean
      responses:
        '200':
          description: Tariffs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageViewModel_TariffListViewModel'
              example:
                pageNumber: 0
                pageSize: 0
                lastPage: true
                totalPages: 0
                totalResults: 0
                totalThisPage: 0
                pageResults:
                  - id: string
                    name: string
                    isEnabled: true
                    appliesToOpportunityTypes:
                      - 0
                    appliesToBranches:
                      - branchId: string
                        branchName: string
  /api/users:
    get:
      tags:
        - basic
      summary: Get users
      description: 'Get all the office users in your company, with all their key descriptive attributes such as title and role. Crew members are not included.'
      operationId: get-api-users
      parameters:
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Office users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageViewModel_UserListViewModel'
              example:
                pageNumber: 0
                pageSize: 0
                lastPage: true
                totalPages: 0
                totalResults: 0
                totalThisPage: 0
                pageResults:
                  - id: string
                    name: string
                    title: string
                    email: string
                    primaryBranch:
                      id: string
                      name: string
                    role:
                      id: string
                      name: string
  '/api/premium/lead/{id}/convert':
    put:
      tags:
        - leads
        - premium
      summary: Convert lead to opportunity
      description: Convert lead to opportunity
      operationId: put-api-premium-lead-id-convert
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ConvertLeadToOpportunityForm'
            example:
              customerId: string
              referralSourceId: string
              tariffId: string
              branchId: string
              moveDate: string
              moveSizeId: string
              salesPersonId: string
              serviceTypeId: { }
              originAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
              destinationAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ConvertLeadToOpportunityForm'
            example:
              customerId: string
              referralSourceId: string
              tariffId: string
              branchId: string
              moveDate: string
              moveSizeId: string
              salesPersonId: string
              serviceTypeId: { }
              originAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
              destinationAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ConvertLeadToOpportunityForm'
            example:
              customerId: string
              referralSourceId: string
              tariffId: string
              branchId: string
              moveDate: string
              moveSizeId: string
              salesPersonId: string
              serviceTypeId: { }
              originAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
              destinationAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ConvertLeadToOpportunityForm'
            example:
              customerId: string
              referralSourceId: string
              tariffId: string
              branchId: string
              moveDate: string
              moveSizeId: string
              salesPersonId: string
              serviceTypeId: { }
              originAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
              destinationAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
      responses:
        '200':
          description: Opportunity details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOpportunityResponse'
              example:
                opportunityId: string
        '400':
          description: Move date cannot be in the past.
        '500':
          description: Unknown error encountered while converting the lead to an opportunity.
  /api/premium/opportunity:
    post:
      tags:
        - opportunities
        - premium
      summary: Create an opportunity
      description: 'Create an opportunity from scratch, indicating all the required fields. Continue to SmartMoving to get an estimate proposal sent to the customer, or retrieve the estimation from the Get opportunity details endpoint to handle the communication externally.'
      operationId: post-api-premium-opportunity
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreatePrimeOpportunityForm'
            example:
              tariffId: string
              salesPersonId: string
              customerId: string
              referralSourceId: string
              branchId: string
              moveDate: string
              moveSizeId: string
              serviceTypeId: { }
              utmInformation:
                utmAdGroup: string
                utmCampaign: string
                utmContent: string
                utmCustomTracking: string
                utmKeyword: string
                utmMedium: string
                utmSource: string
              originAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
              destinationAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
              secretKey: string
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreatePrimeOpportunityForm'
            example:
              tariffId: string
              salesPersonId: string
              customerId: string
              referralSourceId: string
              branchId: string
              moveDate: string
              moveSizeId: string
              serviceTypeId: { }
              utmInformation:
                utmAdGroup: string
                utmCampaign: string
                utmContent: string
                utmCustomTracking: string
                utmKeyword: string
                utmMedium: string
                utmSource: string
              originAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
              destinationAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
              secretKey: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreatePrimeOpportunityForm'
            example:
              tariffId: string
              salesPersonId: string
              customerId: string
              referralSourceId: string
              branchId: string
              moveDate: string
              moveSizeId: string
              serviceTypeId: { }
              utmInformation:
                utmAdGroup: string
                utmCampaign: string
                utmContent: string
                utmCustomTracking: string
                utmKeyword: string
                utmMedium: string
                utmSource: string
              originAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
              destinationAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
              secretKey: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreatePrimeOpportunityForm'
            example:
              tariffId: string
              salesPersonId: string
              customerId: string
              referralSourceId: string
              branchId: string
              moveDate: string
              moveSizeId: string
              serviceTypeId: { }
              utmInformation:
                utmAdGroup: string
                utmCampaign: string
                utmContent: string
                utmCustomTracking: string
                utmKeyword: string
                utmMedium: string
                utmSource: string
              originAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
              destinationAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
              secretKey: string
      responses:
        '200':
          description: Opportunity details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOpportunityResponse'
              example:
                opportunityId: string
        '400':
          description: Move date cannot be in the past.
        '500':
          description: Unknown error encountered while creating the opportunity.
  '/api/premium/leads/{leadId}':
    put:
      tags:
        - leads
        - premium
      summary: Update lead
      description: Update a lead by its ID and easily modify its details
      operationId: put-api-premium-leads-leadid
      parameters:
        - name: leadId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/LeadForm'
            example:
              customerName: string
              branchId: string
              referralSourceId: string
              moveDate: string
              utmInformation:
                utmAdGroup: string
                utmCampaign: string
                utmContent: string
                utmCustomTracking: string
                utmKeyword: string
                utmMedium: string
                utmSource: string
              emailAddress: string
              phoneNumber: string
              phoneType: { }
              salesPersonId: string
              serviceTypeId: { }
              moveSizeId: string
              originAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
              destinationAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/LeadForm'
            example:
              customerName: string
              branchId: string
              referralSourceId: string
              moveDate: string
              utmInformation:
                utmAdGroup: string
                utmCampaign: string
                utmContent: string
                utmCustomTracking: string
                utmKeyword: string
                utmMedium: string
                utmSource: string
              emailAddress: string
              phoneNumber: string
              phoneType: { }
              salesPersonId: string
              serviceTypeId: { }
              moveSizeId: string
              originAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
              destinationAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/LeadForm'
            example:
              customerName: string
              branchId: string
              referralSourceId: string
              moveDate: string
              utmInformation:
                utmAdGroup: string
                utmCampaign: string
                utmContent: string
                utmCustomTracking: string
                utmKeyword: string
                utmMedium: string
                utmSource: string
              emailAddress: string
              phoneNumber: string
              phoneType: { }
              salesPersonId: string
              serviceTypeId: { }
              moveSizeId: string
              originAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
              destinationAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/LeadForm'
            example:
              customerName: string
              branchId: string
              referralSourceId: string
              moveDate: string
              utmInformation:
                utmAdGroup: string
                utmCampaign: string
                utmContent: string
                utmCustomTracking: string
                utmKeyword: string
                utmMedium: string
                utmSource: string
              emailAddress: string
              phoneNumber: string
              phoneType: { }
              salesPersonId: string
              serviceTypeId: { }
              moveSizeId: string
              originAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
              destinationAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
      responses:
        '200':
          description: Lead updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLeadResponse'
              example:
                leadId: string
        '500':
          description: Unknown error encountered while updating the lead.
    patch:
      tags:
        - leads
        - premium
      summary: Partially update lead
      description: Partially update a lead by its ID with only the fields you want to change
      operationId: patch-api-premium-leads-leadid
      parameters:
        - name: leadId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PatchLeadForm'
            example:
              customerName: string
              moveDate: string
              utmInformation:
                utmAdGroup: string
                utmCampaign: string
                utmContent: string
                utmCustomTracking: string
                utmKeyword: string
                utmMedium: string
                utmSource: string
              emailAddress: string
              phoneNumber: string
              phoneType: { }
              branchId: string
              referralSourceId: string
              salesPersonId: string
              serviceTypeId: { }
              moveSizeId: string
              originAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
              destinationAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PatchLeadForm'
            example:
              customerName: string
              moveDate: string
              utmInformation:
                utmAdGroup: string
                utmCampaign: string
                utmContent: string
                utmCustomTracking: string
                utmKeyword: string
                utmMedium: string
                utmSource: string
              emailAddress: string
              phoneNumber: string
              phoneType: { }
              branchId: string
              referralSourceId: string
              salesPersonId: string
              serviceTypeId: { }
              moveSizeId: string
              originAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
              destinationAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PatchLeadForm'
            example:
              customerName: string
              moveDate: string
              utmInformation:
                utmAdGroup: string
                utmCampaign: string
                utmContent: string
                utmCustomTracking: string
                utmKeyword: string
                utmMedium: string
                utmSource: string
              emailAddress: string
              phoneNumber: string
              phoneType: { }
              branchId: string
              referralSourceId: string
              salesPersonId: string
              serviceTypeId: { }
              moveSizeId: string
              originAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
              destinationAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PatchLeadForm'
            example:
              customerName: string
              moveDate: string
              utmInformation:
                utmAdGroup: string
                utmCampaign: string
                utmContent: string
                utmCustomTracking: string
                utmKeyword: string
                utmMedium: string
                utmSource: string
              emailAddress: string
              phoneNumber: string
              phoneType: { }
              branchId: string
              referralSourceId: string
              salesPersonId: string
              serviceTypeId: { }
              moveSizeId: string
              originAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
              destinationAddress:
                fullAddress: string
                street: string
                unit: string
                city: string
                state: string
                zip: string
                lat: 0
                lng: 0
                country: string
      responses:
        '200':
          description: Lead updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLeadResponse'
              example:
                leadId: string
        '500':
          description: Unknown error encountered while updating the lead.
  /api/premium/room-types:
    get:
      tags:
        - premium
      summary: Get room types
      description: Get all the room types that are stored in your companyâ€™s inventory configuration.
      operationId: get-api-premium-room-types
      parameters:
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Room Types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageViewModel_RoomTypesViewModel'
              example:
                pageNumber: 0
                pageSize: 0
                lastPage: true
                totalPages: 0
                totalResults: 0
                totalThisPage: 0
                pageResults:
                  - id: string
                    name: string
  '/api/premium/opportunities/{opportunityId}/communication/calls':
    post:
      tags:
        - opportunities
        - premium
      summary: Log calls on an opportunity
      description: Log your calls in your opportunities to ensure your entire team stays updated on the latest events. These will appear as entries on the sales activity page.
      operationId: post-api-premium-opportunities-opportunityid-communication-calls
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddCallToOpportunityForm'
            example:
              callType: { }
              outcome: { }
              callDateTime: string
              description: string
              fromNumber: string
              toNumber: string
              createdBy: string
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddCallToOpportunityForm'
            example:
              callType: { }
              outcome: { }
              callDateTime: string
              description: string
              fromNumber: string
              toNumber: string
              createdBy: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddCallToOpportunityForm'
            example:
              callType: { }
              outcome: { }
              callDateTime: string
              description: string
              fromNumber: string
              toNumber: string
              createdBy: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddCallToOpportunityForm'
            example:
              callType: { }
              outcome: { }
              callDateTime: string
              description: string
              fromNumber: string
              toNumber: string
              createdBy: string
      responses:
        '200':
          description: Call added to opportunity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCallToOpportunityResponse'
              example:
                callId: string
        '400':
          description: Failed to add call due to bad request.
        '500':
          description: Unknown error encountered while adding a call to the opportunity.
  '/api/premium/opportunities/{opportunityId}/communication/notes':
    post:
      tags:
        - opportunities
        - premium
      summary: Log notes in an opportunity
      description: Log notes in your opportunities to ensure your entire team stays updated on the latest events. These will appear as entries on the sales activity page.
      operationId: post-api-premium-opportunities-opportunityid-communication-notes
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddNoteToOpportunityForm'
            example:
              notes: string
              createdBy: string
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddNoteToOpportunityForm'
            example:
              notes: string
              createdBy: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddNoteToOpportunityForm'
            example:
              notes: string
              createdBy: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/AddNoteToOpportunityForm'
            example:
              notes: string
              createdBy: string
      responses:
        '200':
          description: Note added to opportunity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddNoteToOpportunityResponse'
              example:
                noteId: string
        '400':
          description: Failed to add note due to bad request.
        '500':
          description: Unknown error encountered while adding a note to the opportunity.
  '/api/premium/opportunities/{opportunityId}/rooms':
    post:
      tags:
        - opportunities
        - premium
      summary: Create rooms
      description: 'Add new rooms to your lead or opportunity, and use it to load your jobâ€™s inventory.'
      operationId: post-api-premium-opportunities-opportunityid-rooms
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RoomForm'
            example:
              - name: string
                roomTypeId: string
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RoomForm'
            example:
              - name: string
                roomTypeId: string
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RoomForm'
            example:
              - name: string
                roomTypeId: string
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RoomForm'
            example:
              - name: string
                roomTypeId: string
      responses:
        '200':
          description: Room details
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddRoomResponse'
              example:
                - id: string
                  name: string
                  roomTypeId: string
        '400':
          description: At least one Room Type used is not valid.
        '500':
          description: Unknown error encountered while creating the rooms.
  '/api/premium/opportunities/{opportunityId}':
    patch:
      tags:
        - opportunities
        - premium
      summary: Update opportunity properties
      description: Update specific properties of an opportunity. Only updates properties that are provided in the request.
      operationId: patch-api-premium-opportunities-opportunityid
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateOpportunityForm'
            example:
              moveSizeId: string
              salesPersonId: string
              branchId: string
              opportunityType: { }
              volume: 0
              weight: 0
              isBinding: true
              depositAmount: 0
              referralSourceId: string
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateOpportunityForm'
            example:
              moveSizeId: string
              salesPersonId: string
              branchId: string
              opportunityType: { }
              volume: 0
              weight: 0
              isBinding: true
              depositAmount: 0
              referralSourceId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateOpportunityForm'
            example:
              moveSizeId: string
              salesPersonId: string
              branchId: string
              opportunityType: { }
              volume: 0
              weight: 0
              isBinding: true
              depositAmount: 0
              referralSourceId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateOpportunityForm'
            example:
              moveSizeId: string
              salesPersonId: string
              branchId: string
              opportunityType: { }
              volume: 0
              weight: 0
              isBinding: true
              depositAmount: 0
              referralSourceId: string
      responses:
        '200':
          description: Opportunity updated successfully
        '400':
          description: Opportunity not found or invalid data
        '500':
          description: Unknown error encountered while updating opportunity
  '/api/premium/opportunities/{opportunityId}/jobs/{jobId}/notes':
    patch:
      tags:
        - jobs
        - premium
      summary: Update job notes
      description: 'Update any of the note properties on a job such as CrewNotes, CustomerNotes, InternalNotes, AccountingNotes, or DispatcherNotes'
      operationId: patch-api-premium-opportunities-opportunityid-jobs-jobid-notes
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateJobNotesForm'
            example:
              crewNotes: string
              customerNotes: string
              internalNotes: string
              accountingNotes: string
              dispatcherNotes: string
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateJobNotesForm'
            example:
              crewNotes: string
              customerNotes: string
              internalNotes: string
              accountingNotes: string
              dispatcherNotes: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateJobNotesForm'
            example:
              crewNotes: string
              customerNotes: string
              internalNotes: string
              accountingNotes: string
              dispatcherNotes: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdateJobNotesForm'
            example:
              crewNotes: string
              customerNotes: string
              internalNotes: string
              accountingNotes: string
              dispatcherNotes: string
      responses:
        '200':
          description: Notes updated successfully
        '404':
          description: Job or opportunity not found
        '500':
          description: Unknown error encountered while updating job notes
  '/api/premium/opportunities/{opportunityId}/jobs/{jobId}/stops':
    put:
      tags:
        - jobs
        - opportunities
        - premium
      summary: Update job stops
      description: Update all stops for a job
      operationId: put-api-premium-opportunities-opportunityid-jobs-jobid-stops
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateJobStopForm'
            example:
              - id: string
                isOrigin: true
                isDestination: true
                order: 0
                addressFullAddress: string
                addressLat: 0
                addressLng: 0
                addressUnit: string
                propertyName: string
                propertyType: { }
                stopType: { }
                stairs: 0
                hasElevator: true
                notes: string
                street: string
                city: string
                state: string
                zip: string
                county: string
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateJobStopForm'
            example:
              - id: string
                isOrigin: true
                isDestination: true
                order: 0
                addressFullAddress: string
                addressLat: 0
                addressLng: 0
                addressUnit: string
                propertyName: string
                propertyType: { }
                stopType: { }
                stairs: 0
                hasElevator: true
                notes: string
                street: string
                city: string
                state: string
                zip: string
                county: string
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateJobStopForm'
            example:
              - id: string
                isOrigin: true
                isDestination: true
                order: 0
                addressFullAddress: string
                addressLat: 0
                addressLng: 0
                addressUnit: string
                propertyName: string
                propertyType: { }
                stopType: { }
                stairs: 0
                hasElevator: true
                notes: string
                street: string
                city: string
                state: string
                zip: string
                county: string
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateJobStopForm'
            example:
              - id: string
                isOrigin: true
                isDestination: true
                order: 0
                addressFullAddress: string
                addressLat: 0
                addressLng: 0
                addressUnit: string
                propertyName: string
                propertyType: { }
                stopType: { }
                stairs: 0
                hasElevator: true
                notes: string
                street: string
                city: string
                state: string
                zip: string
                county: string
      responses:
        '200':
          description: Updated stops
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobStopViewModel'
              example:
                - id: string
                  isOrigin: true
                  isDestination: true
                  order: 0
                  addressFullAddress: string
                  addressLat: 0
                  addressLng: 0
                  addressUnit: string
                  propertyName: string
                  propertyType: { }
                  stairs: 0
                  parkingDescription: string
                  hasElevator: true
                  notes: string
        '400':
          description: Validation error
        '404':
          description: Job not found
  '/api/premium/opportunities/{opportunityId}/Estimated/jobs/{jobId}/materials':
    post:
      tags:
        - opportunities
        - premium
      summary: Add materials to job
      description: 'Add packing materials to job based on its tariff. When using this endpoint, the materials added will overwrite the materials on the job, if there are any.'
      operationId: post-api-premium-opportunities-opportunityid-estimated-jobs-jobid-materials
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateMaterialForm'
            example:
              materials:
                - quantity: 0
                  materialId: string
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateMaterialForm'
            example:
              materials:
                - quantity: 0
                  materialId: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateMaterialForm'
            example:
              materials:
                - quantity: 0
                  materialId: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateMaterialForm'
            example:
              materials:
                - quantity: 0
                  materialId: string
      responses:
        '200':
          description: Materials added to job
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaterialItemViewModel'
              example:
                - id: string
                  quantity: 0
                  materialId: string
        '400':
          description: Failed to add materials due to invalid materials or completed opportunity
  '/api/premium/tariffs/{tariffId}/materials':
    get:
      tags:
        - premium
      summary: Get materials by tariff id
      description: Get all your tariffâ€™s packing materials information.
      operationId: get-api-premium-tariffs-tariffid-materials
      parameters:
        - name: tariffId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Tariff materials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageViewModel_TariffMaterialsViewModel'
              example:
                pageNumber: 0
                pageSize: 0
                lastPage: true
                totalPages: 0
                totalResults: 0
                totalThisPage: 0
                pageResults:
                  - id: string
                    rate: 0
                    name: string
                    description: string
                    packTimeInMinutes: 0
                    unpackTimeInMinutes: 0
                    carrierPackShortCode: 0
                    packByOwnerShortCode: 0
                    cost: 0
                    volume: 0
                    weight: 0
                    sortOrder: 0
        '400':
          description: Tariff not found
  /api/bad-lead-reasons:
    get:
      tags:
        - basic
      summary: Get bad lead reasons
      description: Get all of your company's bad lead reasons.
      operationId: get-api-bad-lead-reasons
      parameters:
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Bad lead reasons
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageViewModel_BadLeadReasonViewModel'
              example:
                pageNumber: 0
                pageSize: 0
                lastPage: true
                totalPages: 0
                totalResults: 0
                totalThisPage: 0
                pageResults:
                  - id: string
                    name: string
                    sortOrder: 0
  /api/cancellation-reasons:
    get:
      tags:
        - basic
      summary: Get cancellation reasons
      description: Get all of your company's job cancellation reasons.
      operationId: get-api-cancellation-reasons
      parameters:
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Cancellation reasons
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageViewModel_CancellationReasonViewModel'
              example:
                pageNumber: 0
                pageSize: 0
                lastPage: true
                totalPages: 0
                totalResults: 0
                totalThisPage: 0
                pageResults:
                  - id: string
                    name: string
                    sortOrder: 0
  /api/lost-reasons:
    get:
      tags:
        - basic
      summary: Get lost lead/opportunity reasons
      description: Get all of your company's lost lead/opportunity reasons.
      operationId: get-api-lost-reasons
      parameters:
        - name: Page
          in: query
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Lost reasons
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageViewModel_LostReasonViewModel'
              example:
                pageNumber: 0
                pageSize: 0
                lastPage: true
                totalPages: 0
                totalResults: 0
                totalThisPage: 0
                pageResults:
                  - id: string
                    description: string
  '/api/premium/opportunities/{opportunityId}/inventory/submit':
    post:
      tags:
        - opportunities
        - premium
      summary: Request inventory review
      description: 'Initiate an inventory review request for a specific opportunity, mirroring the functionality of the "Submit Inventory" button in the Customer Portal. Submissions can be resolved from the opportunity''s Sales tab.'
      operationId: post-api-premium-opportunities-opportunityid-inventory-submit
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Inventory submitted successfully
        '400':
          description: Bad request - inventory locked or opportunity not found
  /api/premium/leads:
    post:
      tags:
        - premium
      summary: Create a lead
      description: Submit a new lead to SmartMoving through the Premium API.
      operationId: post-api-premium-leads
      requestBody:
        content:
          application/json-patch+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/LeadFromProviderForm'
            example:
              firstName: string
              lastName: string
              fullName: string
              phoneNumber: string
              extension: string
              phoneType: string
              email: string
              moveDate: string
              leadCost: 0
              originStreet: string
              originCity: string
              originState: string
              originZip: string
              originAddressFull: string
              destinationStreet: string
              destinationCity: string
              destinationState: string
              destinationZip: string
              destinationAddressFull: string
              bedrooms: string
              notes: string
              referralSource: string
              referralSourceId: string
              moveSize: string
              moveSizeId: string
              serviceType: string
              branchId: string
              opportunityType: string
              trackingParameters: string
              userOptIn: true
              utmAdGroup: string
              utmCampaign: string
              utmContent: string
              utmCustomTracking: string
              utmKeyword: string
              utmMedium: string
              utmSource: string
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/LeadFromProviderForm'
            example:
              firstName: string
              lastName: string
              fullName: string
              phoneNumber: string
              extension: string
              phoneType: string
              email: string
              moveDate: string
              leadCost: 0
              originStreet: string
              originCity: string
              originState: string
              originZip: string
              originAddressFull: string
              destinationStreet: string
              destinationCity: string
              destinationState: string
              destinationZip: string
              destinationAddressFull: string
              bedrooms: string
              notes: string
              referralSource: string
              referralSourceId: string
              moveSize: string
              moveSizeId: string
              serviceType: string
              branchId: string
              opportunityType: string
              trackingParameters: string
              userOptIn: true
              utmAdGroup: string
              utmCampaign: string
              utmContent: string
              utmCustomTracking: string
              utmKeyword: string
              utmMedium: string
              utmSource: string
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/LeadFromProviderForm'
            example:
              firstName: string
              lastName: string
              fullName: string
              phoneNumber: string
              extension: string
              phoneType: string
              email: string
              moveDate: string
              leadCost: 0
              originStreet: string
              originCity: string
              originState: string
              originZip: string
              originAddressFull: string
              destinationStreet: string
              destinationCity: string
              destinationState: string
              destinationZip: string
              destinationAddressFull: string
              bedrooms: string
              notes: string
              referralSource: string
              referralSourceId: string
              moveSize: string
              moveSizeId: string
              serviceType: string
              branchId: string
              opportunityType: string
              trackingParameters: string
              userOptIn: true
              utmAdGroup: string
              utmCampaign: string
              utmContent: string
              utmCustomTracking: string
              utmKeyword: string
              utmMedium: string
              utmSource: string
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/LeadFromProviderForm'
            example:
              firstName: string
              lastName: string
              fullName: string
              phoneNumber: string
              extension: string
              phoneType: string
              email: string
              moveDate: string
              leadCost: 0
              originStreet: string
              originCity: string
              originState: string
              originZip: string
              originAddressFull: string
              destinationStreet: string
              destinationCity: string
              destinationState: string
              destinationZip: string
              destinationAddressFull: string
              bedrooms: string
              notes: string
              referralSource: string
              referralSourceId: string
              moveSize: string
              moveSizeId: string
              serviceType: string
              branchId: string
              opportunityType: string
              trackingParameters: string
              userOptIn: true
              utmAdGroup: string
              utmCampaign: string
              utmContent: string
              utmCustomTracking: string
              utmKeyword: string
              utmMedium: string
              utmSource: string
      responses:
        '200':
          description: Lead created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLeadResponse'
              example:
                leadId: string
        '400':
          description: Invalid lead data provided
        '500':
          description: Error creating lead
components:
  schemas:
    ActualJobChargeViewModel:
      type: object
      properties:
        estimatedJobChargeId:
          type: string
          format: uuid
          nullable: true
        estimatedJobCharge:
          allOf:
            - $ref: '#/components/schemas/EstimatedJobChargeViewModel'
          nullable: true
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        chargeCategory:
          allOf:
            - $ref: '#/components/schemas/JobChargeCategory'
        chargeType:
          allOf:
            - $ref: '#/components/schemas/ChargeType'
        subtotal:
          type: number
          format: double
        discountAmount:
          type: number
          format: double
          nullable: true
        discountPercent:
          type: number
          format: double
          nullable: true
        quantity:
          type: integer
          format: int32
        totalCost:
          type: number
          format: double
      additionalProperties: false
    AddCallToOpportunityForm:
      required:
        - callDateTime
        - callType
      type: object
      properties:
        callType:
          allOf:
            - $ref: '#/components/schemas/CallType'
        outcome:
          allOf:
            - $ref: '#/components/schemas/CallOutcome'
          nullable: true
        callDateTime:
          type: string
          format: date-time
        description:
          maxLength: 1000
          type: string
          nullable: true
        fromNumber:
          maxLength: 15
          type: string
          nullable: true
        toNumber:
          maxLength: 15
          type: string
          nullable: true
        createdBy:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    AddCallToOpportunityResponse:
      type: object
      properties:
        callId:
          type: string
          format: uuid
      additionalProperties: false
    AddNoteToOpportunityForm:
      required:
        - notes
      type: object
      properties:
        notes:
          maxLength: 4000
          minLength: 1
          type: string
        createdBy:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    AddNoteToOpportunityResponse:
      type: object
      properties:
        noteId:
          type: string
          format: uuid
      additionalProperties: false
    AddRoomResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        roomTypeId:
          type: string
          format: uuid
      additionalProperties: false
    AppUserViewModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        mobileNumber:
          type: string
          nullable: true
        branchId:
          type: string
          format: uuid
          nullable: true
        regionId:
          type: string
          format: uuid
          nullable: true
        title:
          type: string
          nullable: true
      additionalProperties: false
    AuditActivityType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: '0 = Created, 1 = Edited, 2 = Deleted'
      format: int32
      x-enumNames:
        - Created
        - Edited
        - Deleted
    BadLeadReasonViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        sortOrder:
          type: integer
          format: int32
      additionalProperties: false
    BasicJobViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          allOf:
            - $ref: '#/components/schemas/JobType'
        jobNumber:
          type: string
          nullable: true
        jobDate:
          type: integer
          format: int32
        startTimeUtc:
          type: string
          format: date-time
          nullable: true
        endTimeUtc:
          type: string
          format: date-time
          nullable: true
        completedAtUtc:
          type: string
          format: date-time
          nullable: true
        confirmedAtUtc:
          type: string
          format: date-time
          nullable: true
        closedAtUtc:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    BranchAddressModel:
      type: object
      properties:
        fullAddress:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        zip:
          type: string
          nullable: true
        lat:
          type: number
          format: double
        lng:
          type: number
          format: double
      additionalProperties: false
    BranchListViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        dispatchLocation:
          allOf:
            - $ref: '#/components/schemas/BranchAddressModel'
          nullable: true
        isPrimary:
          type: boolean
      additionalProperties: false
    BranchViewModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
      additionalProperties: false
    CalendarEntryType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
      type: integer
      description: '0 = OnSiteEstimate, 1 = BoxDelivery, 2 = VirtualSurvey, 3 = PhoneSurvey, 4 = OtherEvent, 5 = LiveSwitchSurvey'
      format: int32
      x-enumNames:
        - OnSiteEstimate
        - BoxDelivery
        - VirtualSurvey
        - PhoneSurvey
        - OtherEvent
        - LiveSwitchSurvey
    CalendarEntryViewModel:
      type: object
      properties:
        assignedTo:
          allOf:
            - $ref: '#/components/schemas/AppUserViewModel'
          nullable: true
        type:
          allOf:
            - $ref: '#/components/schemas/CalendarEntryType'
        title:
          type: string
          nullable: true
        startAtUtc:
          type: string
          format: date-time
        durationMinutes:
          type: integer
          format: int32
        notes:
          type: string
          nullable: true
        isConfirmed:
          type: boolean
      additionalProperties: false
    CallOutcome:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
      type: integer
      description: '0 = NoAnswer, 1 = Busy, 2 = WrongNumber, 3 = LeftLiveMessage, 4 = LeftVoicemail, 5 = Connected, 6 = NumberDisconnected'
      format: int32
      x-enumNames:
        - NoAnswer
        - Busy
        - WrongNumber
        - LeftLiveMessage
        - LeftVoicemail
        - Connected
        - NumberDisconnected
    CallType:
      enum:
        - 0
        - 1
      type: integer
      description: '0 = Outbound, 1 = Inbound'
      format: int32
      x-enumNames:
        - Outbound
        - Inbound
    CancellationReasonViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        sortOrder:
          type: integer
          format: int32
      additionalProperties: false
    ChargeType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 100
        - 101
        - 201
        - 202
        - 203
        - 204
        - 205
        - 206
        - 300
        - 301
        - 302
        - 400
        - 500
        - 600
        - 601
      type: integer
      description: '0 = PerMile, 1 = FlatFee, 2 = PerItem, 3 = Percentage, 4 = MileageTable, 5 = FlatFeeTwoFactor, 6 = DriveTime, 7 = Rollup, 8 = PerItemCwt, 9 = DistanceRateFee, 100 = MovingHourlyLabor, 101 = MovingFlatRatePlusHourlyLabor, 201 = PackingHourlyLabor, 202 = PackingFlatRatePlusHourly, 203 = PackingByContainer, 204 = PackingByCwt, 205 = PackingMaterials, 206 = PackingByCuFt, 300 = DistanceRate, 301 = TransportationFlatRate, 302 = ZoneRated, 400 = Valuation, 500 = BulkyItem, 600 = PrepaidStorage, 601 = WarehouseHandling'
      format: int32
      x-enumNames:
        - PerMile
        - FlatFee
        - PerItem
        - Percentage
        - MileageTable
        - FlatFeeTwoFactor
        - DriveTime
        - Rollup
        - PerItemCwt
        - DistanceRateFee
        - MovingHourlyLabor
        - MovingFlatRatePlusHourlyLabor
        - PackingHourlyLabor
        - PackingFlatRatePlusHourly
        - PackingByContainer
        - PackingByCwt
        - PackingMaterials
        - PackingByCuFt
        - DistanceRate
        - TransportationFlatRate
        - ZoneRated
        - Valuation
        - BulkyItem
        - PrepaidStorage
        - WarehouseHandling
    ContactViewModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        emailAddress:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        phoneType:
          allOf:
            - $ref: '#/components/schemas/PhoneType'
          nullable: true
      additionalProperties: false
    ConvertLeadToOpportunityForm:
      required:
        - customerId
        - moveDate
        - moveSizeId
        - referralSourceId
        - salesPersonId
        - serviceTypeId
        - tariffId
      type: object
      properties:
        customerId:
          type: string
          format: uuid
        referralSourceId:
          type: string
          format: uuid
        tariffId:
          type: string
          format: uuid
        branchId:
          type: string
          format: uuid
          nullable: true
        moveDate:
          type: string
          description: 'Move date must be the current date or a date in the future. Format example: ''yyyy-MM-dd''.'
          format: date
        moveSizeId:
          type: string
          format: uuid
        salesPersonId:
          type: string
          format: uuid
        serviceTypeId:
          allOf:
            - $ref: '#/components/schemas/JobType'
        originAddress:
          allOf:
            - $ref: '#/components/schemas/GeocodedAddress'
          nullable: true
        destinationAddress:
          allOf:
            - $ref: '#/components/schemas/GeocodedAddress'
          nullable: true
      additionalProperties: false
    CreateLeadResponse:
      type: object
      properties:
        leadId:
          type: string
          format: uuid
      additionalProperties: false
    CreateMaterialForm:
      required:
        - materials
      type: object
      properties:
        materials:
          type: array
          items:
            $ref: '#/components/schemas/MaterialItemRequestModel'
      additionalProperties: false
    CreateOpportunityResponse:
      type: object
      properties:
        opportunityId:
          type: string
          format: uuid
      additionalProperties: false
    CreatePrimeOpportunityForm:
      required:
        - customerId
        - moveDate
        - moveSizeId
        - referralSourceId
        - salesPersonId
        - serviceTypeId
        - tariffId
      type: object
      properties:
        tariffId:
          type: string
          format: uuid
        salesPersonId:
          type: string
          format: uuid
        customerId:
          type: string
          format: uuid
        referralSourceId:
          type: string
          format: uuid
        branchId:
          type: string
          format: uuid
          nullable: true
        moveDate:
          type: string
          description: 'Move date must be the current date or a date in the future. Format example: ''yyyy-MM-dd''.'
          format: date
        moveSizeId:
          type: string
          format: uuid
        serviceTypeId:
          allOf:
            - $ref: '#/components/schemas/JobType'
        utmInformation:
          allOf:
            - $ref: '#/components/schemas/UtmInformationViewModel'
          nullable: true
        originAddress:
          allOf:
            - $ref: '#/components/schemas/GeocodedAddress'
          nullable: true
        destinationAddress:
          allOf:
            - $ref: '#/components/schemas/GeocodedAddress'
          nullable: true
        secretKey:
          type: string
          format: uuid
      additionalProperties: false
    CustomItemModel:
      required:
        - quantity
        - quantityNotGoing
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        name:
          maxLength: 100
          type: string
          nullable: true
        description:
          maxLength: 1000
          type: string
          nullable: true
        notes:
          maxLength: 5000
          type: string
          nullable: true
        volume:
          minimum: 0.0
          type: number
          format: double
          default: 0
        weight:
          minimum: 0.0
          type: number
          format: double
          default: 0
        quantity:
          maximum: 2147483647.0
          minimum: 0.0
          type: integer
          format: int32
          default: 0
        quantityNotGoing:
          maximum: 2147483647.0
          minimum: 0.0
          type: integer
          format: int32
          default: 0
        saveToMaster:
          type: boolean
          default: false
      additionalProperties: false
    CustomItemToInventoryForm:
      required:
        - items
      type: object
      properties:
        items:
          maxItems: 100
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/CustomItemModel'
      additionalProperties: false
    CustomItemToInventoryResponseViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
      additionalProperties: false
    CustomItemUpdateModel:
      required:
        - quantity
        - quantityNotGoing
        - volume
        - weight
      type: object
      properties:
        notes:
          maxLength: 5000
          type: string
          nullable: true
        volume:
          minimum: 0.0
          type: number
          format: double
          default: 0
        weight:
          minimum: 0.0
          type: number
          format: double
          default: 0
        quantity:
          maximum: 2147483647.0
          minimum: 0.0
          type: integer
          format: int32
          default: 0
        quantityNotGoing:
          maximum: 2147483647.0
          minimum: 0.0
          type: integer
          format: int32
          default: 0
      additionalProperties: false
    CustomerModel:
      required:
        - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
        phoneNumber:
          type: string
          nullable: true
        phoneType:
          allOf:
            - $ref: '#/components/schemas/PhoneType'
          nullable: true
        emailAddress:
          maxLength: 100
          type: string
          nullable: true
        address:
          maxLength: 500
          type: string
          nullable: true
        secondaryPhoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/SecondaryPhoneNumber'
          nullable: true
      additionalProperties: false
    CustomerOpportunityViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        quoteNumber:
          type: string
          nullable: true
        serviceDate:
          type: integer
          format: int32
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/OpportunityStatus'
        createdAtUtc:
          type: string
          format: date-time
      additionalProperties: false
    CustomerServiceTicketPriority:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: '0 = Low, 1 = High, 2 = NotSet'
      format: int32
      x-enumNames:
        - Low
        - High
        - NotSet
    CustomerServiceTicketStatus:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: '0 = NotStarted, 1 = InProgress, 2 = Completed'
      format: int32
      x-enumNames:
        - NotStarted
        - InProgress
        - Completed
    CustomerServiceTicketType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: '0 = Claim, 1 = Review, 2 = Other'
      format: int32
      x-enumNames:
        - Claim
        - Review
        - Other
    CustomerServiceTicketViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        jobId:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          nullable: true
        type:
          allOf:
            - $ref: '#/components/schemas/CustomerServiceTicketType'
        status:
          allOf:
            - $ref: '#/components/schemas/CustomerServiceTicketStatus'
        priority:
          allOf:
            - $ref: '#/components/schemas/CustomerServiceTicketPriority'
        createdAtUtc:
          type: string
          format: date-time
      additionalProperties: false
    CustomerStorageAccountViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        accountNumber:
          type: string
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/StorageAccountStatus'
        jobId:
          type: string
          format: uuid
          nullable: true
        storageType:
          allOf:
            - $ref: '#/components/schemas/StorageType'
        storageBillingPreOrPostPay:
          allOf:
            - $ref: '#/components/schemas/StorageBillingPreOrPostPay'
        storageAndValuationTotal:
          type: number
          format: double
        totalMonthlyCharges:
          type: number
          format: double
          readOnly: true
        storageValuationMethod:
          allOf:
            - $ref: '#/components/schemas/StorageValuationMethod'
          nullable: true
        nextInvoiceAt:
          type: string
          format: date-time
          nullable: true
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/CustomerStorageDiscountViewModel'
          nullable: true
        warehouseSalesTaxRate:
          type: number
          format: double
        warehouseName:
          type: string
          nullable: true
      additionalProperties: false
    CustomerStorageDiscountViewModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        storageDiscountType:
          allOf:
            - $ref: '#/components/schemas/StorageDiscountType'
        discountAmountType:
          allOf:
            - $ref: '#/components/schemas/DiscountType'
        amount:
          type: number
          format: double
      additionalProperties: false
    CustomerViewModel:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          minLength: 1
          type: string
        phoneNumber:
          type: string
          nullable: true
        phoneType:
          allOf:
            - $ref: '#/components/schemas/PhoneType'
          nullable: true
        emailAddress:
          maxLength: 100
          type: string
          nullable: true
        address:
          maxLength: 500
          type: string
          nullable: true
        secondaryPhoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/SecondaryPhoneNumber'
          nullable: true
      additionalProperties: false
    DiscountType:
      enum:
        - 0
        - 1
      type: integer
      description: '0 = Amount, 1 = Percentage'
      format: int32
      x-enumNames:
        - Amount
        - Percentage
    DocumentSummaryViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          nullable: true
        isComplete:
          type: boolean
        url:
          type: string
          nullable: true
      additionalProperties: false
    DocumentType:
      enum:
        - 0
        - 5
        - 6
        - 7
        - 8
        - 9
      type: integer
      description: '0 = PrintOnly, 5 = Contract, 6 = Addendum, 7 = Estimate, 8 = Invoice, 9 = WorkOrder'
      format: int32
      x-enumNames:
        - PrintOnly
        - Contract
        - Addendum
        - Estimate
        - Invoice
        - WorkOrder
    DocumentViewModel:
      type: object
      properties:
        opportunityDocuments:
          type: array
          items:
            $ref: '#/components/schemas/DocumentSummaryViewModel'
          nullable: true
        jobDocuments:
          type: array
          items:
            $ref: '#/components/schemas/JobDocumentSummaryViewModel'
          nullable: true
      additionalProperties: false
    EstimatedJobChargeViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        chargeCategory:
          allOf:
            - $ref: '#/components/schemas/JobChargeCategory'
        chargeType:
          allOf:
            - $ref: '#/components/schemas/ChargeType'
        subtotal:
          type: number
          format: double
        discountAmount:
          type: number
          format: double
          nullable: true
        discountPercent:
          type: number
          format: double
          nullable: true
        quantity:
          type: integer
          format: int32
        totalCost:
          type: number
          format: double
      additionalProperties: false
    FileCategory:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
      type: integer
      description: '0 = Documents, 1 = Customer, 2 = Survey, 3 = PreMove, 4 = PostMove, 5 = Claims'
      format: int32
      x-enumNames:
        - Documents
        - Customer
        - Survey
        - PreMove
        - PostMove
        - Claims
    FollowUpModel:
      required:
        - assignedToId
        - dueDateTime
        - title
        - type
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/FollowUpType'
        title:
          maxLength: 100
          minLength: 1
          type: string
        assignedToId:
          type: string
          format: uuid
        dueDateTime:
          type: string
          format: date-time
        completedAtUtc:
          type: string
          format: date-time
          nullable: true
        notes:
          type: string
          nullable: true
        completed:
          type: boolean
      additionalProperties: false
    FollowUpType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
      description: '0 = Email, 1 = Call, 2 = Text, 3 = Other, 4 = CMET'
      format: int32
      x-enumNames:
        - Email
        - Call
        - Text
        - Other
        - CMET
    FollowUpViewModel:
      required:
        - assignedToId
        - dueDateTime
        - title
        - type
      type: object
      properties:
        id:
          type: string
          format: uuid
        opportunityId:
          type: string
          format: uuid
          nullable: true
        type:
          allOf:
            - $ref: '#/components/schemas/FollowUpType'
        title:
          maxLength: 100
          minLength: 1
          type: string
        assignedToId:
          type: string
          format: uuid
        dueDateTime:
          type: string
          format: date-time
        completedAtUtc:
          type: string
          format: date-time
          nullable: true
        notes:
          type: string
          nullable: true
        completed:
          type: boolean
      additionalProperties: false
    GeocodedAddress:
      type: object
      properties:
        fullAddress:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        unit:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        zip:
          type: string
          nullable: true
        lat:
          type: number
          format: double
          nullable: true
        lng:
          type: number
          format: double
          nullable: true
        country:
          type: string
          nullable: true
      additionalProperties: false
    GetAllCustomersJobViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        jobNumber:
          type: string
          nullable: true
        serviceDate:
          type: string
          nullable: true
        type:
          allOf:
            - $ref: '#/components/schemas/JobType'
      additionalProperties: false
    GetAllCustomersOpportunityViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        quoteNumber:
          type: string
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/OpportunityStatus'
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/GetAllCustomersJobViewModel'
          nullable: true
      additionalProperties: false
    GetAllCustomersViewModel:
      required:
        - name
      type: object
      properties:
        id:
          type: string
          format: uuid
        opportunities:
          type: array
          items:
            $ref: '#/components/schemas/GetAllCustomersOpportunityViewModel'
          nullable: true
        name:
          minLength: 1
          type: string
        phoneNumber:
          type: string
          nullable: true
        phoneType:
          allOf:
            - $ref: '#/components/schemas/PhoneType'
          nullable: true
        emailAddress:
          maxLength: 100
          type: string
          nullable: true
        address:
          maxLength: 500
          type: string
          nullable: true
        secondaryPhoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/SecondaryPhoneNumber'
          nullable: true
      additionalProperties: false
    InventoryItemType:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      description: '0 = Furniture, 1 = Box, 2 = CarrierPack, 3 = PackByOwner'
      format: int32
      x-enumNames:
        - Furniture
        - Box
        - CarrierPack
        - PackByOwner
    InventoryItemViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        shortCode:
          type: integer
          format: int32
        volume:
          type: number
          format: double
          nullable: true
        weight:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    JobChargeCategory:
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
      type: integer
      description: '1 = MovingLabor, 2 = Transportation, 3 = Packing, 4 = AdditionalServices, 5 = TripAndTravel, 6 = FuelSurcharge, 7 = Valuation, 8 = BulkyItem, 9 = Storage, 10 = ShuttleFees, 11 = StorageInTransit, 12 = Insurance'
      format: int32
      x-enumNames:
        - MovingLabor
        - Transportation
        - Packing
        - AdditionalServices
        - TripAndTravel
        - FuelSurcharge
        - Valuation
        - BulkyItem
        - Storage
        - ShuttleFees
        - StorageInTransit
        - Insurance
    JobChargeViewModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        chargeCategory:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
        editableDescription:
          type: string
          nullable: true
        sortOrder:
          type: integer
          format: int32
        subtotal:
          type: number
          format: double
        discountAmount:
          type: number
          format: double
        totalCost:
          type: number
          format: double
      additionalProperties: false
    JobDocumentSummaryViewModel:
      type: object
      properties:
        jobId:
          type: string
          format: uuid
        id:
          type: string
          format: uuid
        title:
          type: string
          nullable: true
        isComplete:
          type: boolean
        url:
          type: string
          nullable: true
      additionalProperties: false
    JobDocumentViewModel:
      type: object
      properties:
        title:
          type: string
          nullable: true
        type:
          allOf:
            - $ref: '#/components/schemas/DocumentType'
        isComplete:
          type: boolean
      additionalProperties: false
    JobMaterialViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        materialsQuantity:
          type: integer
          format: int32
        materialsRate:
          type: number
          format: double
        packingQuantity:
          type: integer
          format: int32
        packingRate:
          type: number
          format: double
        packingTimeMinutes:
          type: integer
          format: int32
        unpackingQuantity:
          type: integer
          format: int32
        unpackingRate:
          type: number
          format: double
        unpackingTimeMinutes:
          type: integer
          format: int32
        isContainer:
          type: boolean
      additionalProperties: false
    JobPaymentViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        opportunityId:
          type: string
          format: uuid
        jobId:
          type: string
          format: uuid
          nullable: true
        source:
          allOf:
            - $ref: '#/components/schemas/PaymentSource'
        paymentType:
          allOf:
            - $ref: '#/components/schemas/PaymentType'
        amount:
          type: number
          format: double
        takenByUserId:
          type: string
          format: uuid
        createdAtUtc:
          type: string
          format: date-time
        customPaymentDescription:
          type: string
          nullable: true
        gatewayPaymentId:
          type: string
          nullable: true
        refundsJobPaymentId:
          type: string
          format: uuid
          nullable: true
        amountRefunded:
          type: number
          format: double
        paymentCategory:
          allOf:
            - $ref: '#/components/schemas/PaymentCategory'
          nullable: true
        isRefund:
          type: boolean
          readOnly: true
      additionalProperties: false
    JobStopViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        isOrigin:
          type: boolean
        isDestination:
          type: boolean
        order:
          type: integer
          format: int32
        addressFullAddress:
          type: string
          nullable: true
        addressLat:
          type: number
          format: double
        addressLng:
          type: number
          format: double
        addressUnit:
          type: string
          nullable: true
        propertyName:
          type: string
          nullable: true
        propertyType:
          allOf:
            - $ref: '#/components/schemas/PropertyType'
        stairs:
          type: integer
          format: int32
        parkingDescription:
          type: string
          nullable: true
        hasElevator:
          type: boolean
        notes:
          type: string
          nullable: true
      additionalProperties: false
    JobType:
      enum:
        - 1
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 101
        - 102
        - 103
        - 104
        - 105
        - 106
        - 107
        - 108
        - 109
        - 110
        - 111
        - 112
        - 113
        - 114
        - 115
        - 116
        - 117
        - 118
        - 119
        - 120
        - 121
        - 122
        - 123
        - 124
        - 125
        - 126
        - 127
        - 128
        - 129
        - 130
        - 131
        - 132
        - 133
        - 134
        - 135
        - 136
        - 137
        - 138
        - 139
        - 140
      type: integer
      description: '1 = Moving, 3 = Packing, 4 = MovingAndPacking, 5 = LoadOnly, 6 = UnloadOnly, 7 = Commercial, 8 = StorageInBound, 9 = StorageOutBound, 10 = InnerHouse, 11 = JunkRemoval, 12 = LaborOnly, 101 = Custom01, 102 = Custom02, 103 = Custom03, 104 = Custom04, 105 = Custom05, 106 = Custom06, 107 = Custom07, 108 = Custom08, 109 = Custom09, 110 = Custom10, 111 = Custom11, 112 = Custom12, 113 = Custom13, 114 = Custom14, 115 = Custom15, 116 = Custom16, 117 = Custom17, 118 = Custom18, 119 = Custom19, 120 = Custom20, 121 = Custom21, 122 = Custom22, 123 = Custom23, 124 = Custom24, 125 = Custom25, 126 = Custom26, 127 = Custom27, 128 = Custom28, 129 = Custom29, 130 = Custom30, 131 = Custom31, 132 = Custom32, 133 = Custom33, 134 = Custom34, 135 = Custom35, 136 = Custom36, 137 = Custom37, 138 = Custom38, 139 = Custom39, 140 = Custom40'
      format: int32
      x-enumNames:
        - Moving
        - Packing
        - MovingAndPacking
        - LoadOnly
        - UnloadOnly
        - Commercial
        - StorageInBound
        - StorageOutBound
        - InnerHouse
        - JunkRemoval
        - LaborOnly
        - Custom01
        - Custom02
        - Custom03
        - Custom04
        - Custom05
        - Custom06
        - Custom07
        - Custom08
        - Custom09
        - Custom10
        - Custom11
        - Custom12
        - Custom13
        - Custom14
        - Custom15
        - Custom16
        - Custom17
        - Custom18
        - Custom19
        - Custom20
        - Custom21
        - Custom22
        - Custom23
        - Custom24
        - Custom25
        - Custom26
        - Custom27
        - Custom28
        - Custom29
        - Custom30
        - Custom31
        - Custom32
        - Custom33
        - Custom34
        - Custom35
        - Custom36
        - Custom37
        - Custom38
        - Custom39
        - Custom40
    JobViewModel:
      type: object
      properties:
        opportunityId:
          type: string
          format: uuid
        arrivalWindow:
          type: string
          nullable: true
        dropOffDate:
          type: integer
          format: int32
          nullable: true
        stops:
          type: array
          items:
            $ref: '#/components/schemas/JobStopViewModel'
          nullable: true
        estimatedCharges:
          type: array
          items:
            $ref: '#/components/schemas/EstimatedJobChargeViewModel'
          nullable: true
        actualCharges:
          type: array
          items:
            $ref: '#/components/schemas/ActualJobChargeViewModel'
          nullable: true
        estimatedMaterials:
          type: array
          items:
            $ref: '#/components/schemas/JobMaterialViewModel'
          nullable: true
        actualMaterials:
          type: array
          items:
            $ref: '#/components/schemas/JobMaterialViewModel'
          nullable: true
        id:
          type: string
          format: uuid
        type:
          allOf:
            - $ref: '#/components/schemas/JobType'
        jobNumber:
          type: string
          nullable: true
        jobDate:
          type: integer
          format: int32
        startTimeUtc:
          type: string
          format: date-time
          nullable: true
        endTimeUtc:
          type: string
          format: date-time
          nullable: true
        completedAtUtc:
          type: string
          format: date-time
          nullable: true
        confirmedAtUtc:
          type: string
          format: date-time
          nullable: true
        closedAtUtc:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    LeadForm:
      required:
        - branchId
        - customerName
        - referralSourceId
      type: object
      properties:
        customerName:
          minLength: 1
          type: string
        branchId:
          type: string
          format: uuid
        referralSourceId:
          type: string
          format: uuid
        moveDate:
          type: string
          description: 'Format example: "yyyy-MM-dd".'
          format: date
          nullable: true
        utmInformation:
          allOf:
            - $ref: '#/components/schemas/UtmInformationViewModel'
          nullable: true
        emailAddress:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        phoneType:
          allOf:
            - $ref: '#/components/schemas/PhoneType'
          nullable: true
        salesPersonId:
          type: string
          format: uuid
          nullable: true
        serviceTypeId:
          allOf:
            - $ref: '#/components/schemas/JobType'
          nullable: true
        moveSizeId:
          type: string
          format: uuid
          nullable: true
        originAddress:
          allOf:
            - $ref: '#/components/schemas/GeocodedAddress'
          nullable: true
        destinationAddress:
          allOf:
            - $ref: '#/components/schemas/GeocodedAddress'
          nullable: true
      additionalProperties: false
    LeadFromProviderForm:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        extension:
          type: string
          nullable: true
        phoneType:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        moveDate:
          type: string
          nullable: true
        leadCost:
          type: number
          format: double
          nullable: true
        originStreet:
          type: string
          nullable: true
        originCity:
          type: string
          nullable: true
        originState:
          type: string
          nullable: true
        originZip:
          type: string
          nullable: true
        originAddressFull:
          type: string
          nullable: true
        destinationStreet:
          type: string
          nullable: true
        destinationCity:
          type: string
          nullable: true
        destinationState:
          type: string
          nullable: true
        destinationZip:
          type: string
          nullable: true
        destinationAddressFull:
          type: string
          nullable: true
        bedrooms:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
        referralSource:
          type: string
          nullable: true
        referralSourceId:
          type: string
          nullable: true
        moveSize:
          type: string
          nullable: true
        moveSizeId:
          type: string
          nullable: true
        serviceType:
          type: string
          nullable: true
        branchId:
          type: string
          nullable: true
        opportunityType:
          type: string
          nullable: true
        trackingParameters:
          type: string
          nullable: true
        userOptIn:
          type: boolean
          nullable: true
        utmAdGroup:
          type: string
          nullable: true
        utmCampaign:
          type: string
          nullable: true
        utmContent:
          type: string
          nullable: true
        utmCustomTracking:
          type: string
          nullable: true
        utmKeyword:
          type: string
          nullable: true
        utmMedium:
          type: string
          nullable: true
        utmSource:
          type: string
          nullable: true
      additionalProperties: { }
    LeadViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        customerName:
          type: string
          nullable: true
        emailAddress:
          type: string
          nullable: true
        referralSource:
          type: string
          nullable: true
          readOnly: true
        referralSourceName:
          type: string
          nullable: true
        affiliateName:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        phoneType:
          allOf:
            - $ref: '#/components/schemas/PhoneType'
          nullable: true
        serviceDate:
          type: integer
          format: int32
        salesPersonId:
          type: string
          format: uuid
          nullable: true
        salesPerson:
          type: string
          nullable: true
        type:
          allOf:
            - $ref: '#/components/schemas/JobType'
          nullable: true
        branchId:
          type: string
          format: uuid
          nullable: true
        branchName:
          type: string
          nullable: true
        originAddressFull:
          type: string
          nullable: true
        originStreet:
          type: string
          nullable: true
        originCity:
          type: string
          nullable: true
        originState:
          type: string
          nullable: true
        originZip:
          type: string
          nullable: true
        destinationAddressFull:
          type: string
          nullable: true
        destinationStreet:
          type: string
          nullable: true
        destinationCity:
          type: string
          nullable: true
        destinationState:
          type: string
          nullable: true
        destinationZip:
          type: string
          nullable: true
        moveSizeId:
          type: string
          format: uuid
          nullable: true
        moveSizeName:
          type: string
          nullable: true
          readOnly: true
        createdAtUtc:
          type: string
          format: date-time
      additionalProperties: false
    LostReasonViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        description:
          type: string
          nullable: true
      additionalProperties: false
    MaterialItemRequestModel:
      required:
        - materialId
        - quantity
      type: object
      properties:
        quantity:
          maximum: 2147483647.0
          minimum: 1.0
          type: integer
          format: int32
        materialId:
          type: string
          format: uuid
      additionalProperties: false
    MaterialItemViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        quantity:
          type: integer
          format: int32
        materialId:
          type: string
          format: uuid
      additionalProperties: false
    MoveSizeListViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        volume:
          type: integer
          format: int32
          nullable: true
        weight:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    MoveSizeViewModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        volume:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    OpportunityAttachmentViewModel:
      required:
        - base64Contents
        - category
        - fileName
      type: object
      properties:
        base64Contents:
          minLength: 1
          type: string
        fileName:
          maxLength: 300
          minLength: 5
          type: string
        category:
          allOf:
            - $ref: '#/components/schemas/FileCategory'
        notes:
          maxLength: 1000
          type: string
          nullable: true
      additionalProperties: false
    OpportunityAuditActivityEntryViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        activityType:
          allOf:
            - $ref: '#/components/schemas/AuditActivityType'
        description:
          type: string
          nullable: true
        changeMadeByUserId:
          type: string
          format: uuid
        createdAtUtc:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    OpportunityCustomerViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        emailAddress:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        phoneType:
          allOf:
            - $ref: '#/components/schemas/PhoneType'
          nullable: true
      additionalProperties: false
    OpportunityDetailsViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        quoteNumber:
          type: integer
          format: int32
        customer:
          allOf:
            - $ref: '#/components/schemas/OpportunityCustomerViewModel'
          nullable: true
        branch:
          allOf:
            - $ref: '#/components/schemas/BranchViewModel'
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactViewModel'
          nullable: true
        opportunityType:
          allOf:
            - $ref: '#/components/schemas/OpportunityType'
        type:
          allOf:
            - $ref: '#/components/schemas/JobType'
          nullable: true
        serviceDate:
          type: integer
          format: int32
          nullable: true
        status:
          allOf:
            - $ref: '#/components/schemas/OpportunityStatus'
        leadStatus:
          type: string
          nullable: true
        moveSize:
          allOf:
            - $ref: '#/components/schemas/MoveSizeViewModel'
          nullable: true
        volume:
          type: number
          format: double
        weight:
          type: number
          format: double
        volumeWeightCalculationMode:
          allOf:
            - $ref: '#/components/schemas/VolumeWeightCalculationMode'
        estimatedTotal:
          allOf:
            - $ref: '#/components/schemas/OpportunityTotalsViewModel'
          nullable: true
        estimator:
          allOf:
            - $ref: '#/components/schemas/AppUserViewModel'
          nullable: true
        salesAssignee:
          allOf:
            - $ref: '#/components/schemas/SalesPersonViewModel'
          nullable: true
        hasTripInfo:
          type: boolean
        referralSource:
          type: string
          nullable: true
        allowInventoryUpdates:
          type: boolean
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/OpportunityJobViewModel'
          nullable: true
        payments:
          type: array
          items:
            $ref: '#/components/schemas/OpportunityPaymentViewModel'
          nullable: true
        tripInfo:
          allOf:
            - $ref: '#/components/schemas/OpportunityTripInfoViewModel'
          nullable: true
        opportunityFiles:
          type: array
          items:
            type: string
          nullable: true
        photos:
          type: array
          items:
            type: string
          nullable: true
        opportunityDocuments:
          type: array
          items:
            $ref: '#/components/schemas/OpportunityDocumentViewModel'
          nullable: true
        surveys:
          type: array
          items:
            $ref: '#/components/schemas/CalendarEntryViewModel'
          nullable: true
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskItemViewModel'
          nullable: true
        tariff:
          allOf:
            - $ref: '#/components/schemas/TariffViewModel'
          nullable: true
      additionalProperties: false
    OpportunityDocumentViewModel:
      type: object
      properties:
        title:
          type: string
          nullable: true
        type:
          allOf:
            - $ref: '#/components/schemas/DocumentType'
        isComplete:
          type: boolean
      additionalProperties: false
    OpportunityInventoryBoxViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        shortCode:
          type: integer
          format: int32
        notes:
          type: string
          nullable: true
        volume:
          type: number
          format: double
          nullable: true
        weight:
          type: number
          format: double
          nullable: true
        imageUrl:
          type: string
          nullable: true
        quantity:
          type: integer
          format: int32
        inventoryItemId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    OpportunityInventoryItemViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
        shortCode:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
        volume:
          type: number
          format: double
          nullable: true
        weight:
          type: number
          format: double
          nullable: true
        width:
          type: number
          format: double
          nullable: true
        depth:
          type: number
          format: double
          nullable: true
        height:
          type: number
          format: double
          nullable: true
        type:
          allOf:
            - $ref: '#/components/schemas/InventoryItemType'
        inventoryItemId:
          type: string
          format: uuid
          nullable: true
        imageUrls:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    OpportunityInventoryRoomViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        roomType:
          type: string
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/OpportunityInventoryItemViewModel'
          nullable: true
      additionalProperties: false
    OpportunityInventoryViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAtUtc:
          type: string
          format: date-time
        lastModifiedById:
          type: string
          format: uuid
          nullable: true
        lastModifiedFromApplication:
          allOf:
            - $ref: '#/components/schemas/SmApplications'
          nullable: true
        densityFactor:
          type: number
          format: double
          nullable: true
        boxes:
          type: array
          items:
            $ref: '#/components/schemas/OpportunityInventoryBoxViewModel'
          nullable: true
        rooms:
          type: array
          items:
            $ref: '#/components/schemas/OpportunityInventoryRoomViewModel'
          nullable: true
        lockStatus:
          type: boolean
      additionalProperties: false
    OpportunityJobViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        jobNumber:
          type: string
          nullable: true
        jobDate:
          type: integer
          format: int32
        type:
          allOf:
            - $ref: '#/components/schemas/JobType'
        confirmed:
          type: boolean
          readOnly: true
        jobAddresses:
          type: array
          items:
            type: string
          nullable: true
        jobDocuments:
          type: array
          items:
            $ref: '#/components/schemas/JobDocumentViewModel'
          nullable: true
        estimatedCharges:
          type: array
          items:
            $ref: '#/components/schemas/JobChargeViewModel'
          nullable: true
        actualCharges:
          type: array
          items:
            $ref: '#/components/schemas/JobChargeViewModel'
          nullable: true
      additionalProperties: false
    OpportunityPaymentViewModel:
      type: object
      properties:
        source:
          allOf:
            - $ref: '#/components/schemas/PaymentSource'
        paymentType:
          allOf:
            - $ref: '#/components/schemas/PaymentType'
        amount:
          type: number
          format: double
        takenByUser:
          type: string
          nullable: true
        isOutstanding:
          type: boolean
        paidAtUtc:
          type: string
          format: date-time
          nullable: true
        refundsJobPaymentId:
          type: string
          format: uuid
          nullable: true
        amountRefunded:
          type: number
          format: double
        paymentCategory:
          allOf:
            - $ref: '#/components/schemas/PaymentCategory'
          nullable: true
      additionalProperties: false
    OpportunityStatus:
      enum:
        - 0
        - 1
        - 3
        - 4
        - 10
        - 11
        - 20
        - 30
        - 50
      type: integer
      description: '0 = NewLead, 1 = LeadInProgress, 3 = Opportunity, 4 = Booked, 10 = Completed, 11 = Closed, 20 = Cancelled, 30 = Lost, 50 = BadLead'
      format: int32
      x-enumNames:
        - NewLead
        - LeadInProgress
        - Opportunity
        - Booked
        - Completed
        - Closed
        - Cancelled
        - Lost
        - BadLead
    OpportunityTotalsViewModel:
      type: object
      properties:
        subtotal:
          type: number
          format: double
        taxableAmount:
          type: number
          format: double
        tax:
          type: number
          format: double
        finalTotal:
          type: number
          format: double
      additionalProperties: false
    OpportunityTripInfoViewModel:
      type: object
      properties:
        isTripInfoApplied:
          type: boolean
        pickupSpreadFirstAvailableDate:
          type: integer
          format: int32
          nullable: true
        pickupSpreadLastAvailableDate:
          type: integer
          format: int32
          nullable: true
        confirmedPickupDate:
          type: integer
          format: int32
          nullable: true
        preferredPickupTime:
          type: number
          format: double
          nullable: true
        preferredPickupTimeDurationMinutes:
          type: integer
          format: int32
          nullable: true
        deliverySpreadFirstAvailableDate:
          type: integer
          format: int32
          nullable: true
        deliverySpreadLastAvailableDate:
          type: integer
          format: int32
          nullable: true
        confirmedDeliveryDate:
          type: integer
          format: int32
          nullable: true
        preferredDeliveryTime:
          type: number
          format: double
          nullable: true
        preferredDeliveryTimeDurationMinutes:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    OpportunityType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: '0 = Local, 1 = Intrastate, 2 = Interstate'
      format: int32
      x-enumNames:
        - Local
        - Intrastate
        - Interstate
    PageViewModel_BadLeadReasonViewModel:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        lastPage:
          type: boolean
          readOnly: true
        totalPages:
          type: integer
          format: int32
          readOnly: true
        totalResults:
          type: integer
          format: int32
        totalThisPage:
          type: integer
          format: int32
        pageResults:
          type: array
          items:
            $ref: '#/components/schemas/BadLeadReasonViewModel'
          nullable: true
      additionalProperties: false
    PageViewModel_BranchListViewModel:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        lastPage:
          type: boolean
          readOnly: true
        totalPages:
          type: integer
          format: int32
          readOnly: true
        totalResults:
          type: integer
          format: int32
        totalThisPage:
          type: integer
          format: int32
        pageResults:
          type: array
          items:
            $ref: '#/components/schemas/BranchListViewModel'
          nullable: true
      additionalProperties: false
    PageViewModel_CancellationReasonViewModel:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        lastPage:
          type: boolean
          readOnly: true
        totalPages:
          type: integer
          format: int32
          readOnly: true
        totalResults:
          type: integer
          format: int32
        totalThisPage:
          type: integer
          format: int32
        pageResults:
          type: array
          items:
            $ref: '#/components/schemas/CancellationReasonViewModel'
          nullable: true
      additionalProperties: false
    PageViewModel_InventoryItemViewModel:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        lastPage:
          type: boolean
          readOnly: true
        totalPages:
          type: integer
          format: int32
          readOnly: true
        totalResults:
          type: integer
          format: int32
        totalThisPage:
          type: integer
          format: int32
        pageResults:
          type: array
          items:
            $ref: '#/components/schemas/InventoryItemViewModel'
          nullable: true
      additionalProperties: false
    PageViewModel_LeadViewModel:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        lastPage:
          type: boolean
          readOnly: true
        totalPages:
          type: integer
          format: int32
          readOnly: true
        totalResults:
          type: integer
          format: int32
        totalThisPage:
          type: integer
          format: int32
        pageResults:
          type: array
          items:
            $ref: '#/components/schemas/LeadViewModel'
          nullable: true
      additionalProperties: false
    PageViewModel_LostReasonViewModel:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        lastPage:
          type: boolean
          readOnly: true
        totalPages:
          type: integer
          format: int32
          readOnly: true
        totalResults:
          type: integer
          format: int32
        totalThisPage:
          type: integer
          format: int32
        pageResults:
          type: array
          items:
            $ref: '#/components/schemas/LostReasonViewModel'
          nullable: true
      additionalProperties: false
    PageViewModel_MoveSizeListViewModel:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        lastPage:
          type: boolean
          readOnly: true
        totalPages:
          type: integer
          format: int32
          readOnly: true
        totalResults:
          type: integer
          format: int32
        totalThisPage:
          type: integer
          format: int32
        pageResults:
          type: array
          items:
            $ref: '#/components/schemas/MoveSizeListViewModel'
          nullable: true
      additionalProperties: false
    PageViewModel_ReferralSourceViewModel:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        lastPage:
          type: boolean
          readOnly: true
        totalPages:
          type: integer
          format: int32
          readOnly: true
        totalResults:
          type: integer
          format: int32
        totalThisPage:
          type: integer
          format: int32
        pageResults:
          type: array
          items:
            $ref: '#/components/schemas/ReferralSourceViewModel'
          nullable: true
      additionalProperties: false
    PageViewModel_RoomTypesViewModel:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        lastPage:
          type: boolean
          readOnly: true
        totalPages:
          type: integer
          format: int32
          readOnly: true
        totalResults:
          type: integer
          format: int32
        totalThisPage:
          type: integer
          format: int32
        pageResults:
          type: array
          items:
            $ref: '#/components/schemas/RoomTypesViewModel'
          nullable: true
      additionalProperties: false
    PageViewModel_ServiceTypeViewModel:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        lastPage:
          type: boolean
          readOnly: true
        totalPages:
          type: integer
          format: int32
          readOnly: true
        totalResults:
          type: integer
          format: int32
        totalThisPage:
          type: integer
          format: int32
        pageResults:
          type: array
          items:
            $ref: '#/components/schemas/ServiceTypeViewModel'
          nullable: true
      additionalProperties: false
    PageViewModel_TariffListViewModel:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        lastPage:
          type: boolean
          readOnly: true
        totalPages:
          type: integer
          format: int32
          readOnly: true
        totalResults:
          type: integer
          format: int32
        totalThisPage:
          type: integer
          format: int32
        pageResults:
          type: array
          items:
            $ref: '#/components/schemas/TariffListViewModel'
          nullable: true
      additionalProperties: false
    PageViewModel_TariffMaterialsViewModel:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        lastPage:
          type: boolean
          readOnly: true
        totalPages:
          type: integer
          format: int32
          readOnly: true
        totalResults:
          type: integer
          format: int32
        totalThisPage:
          type: integer
          format: int32
        pageResults:
          type: array
          items:
            $ref: '#/components/schemas/TariffMaterialsViewModel'
          nullable: true
      additionalProperties: false
    PageViewModel_UserListViewModel:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        lastPage:
          type: boolean
          readOnly: true
        totalPages:
          type: integer
          format: int32
          readOnly: true
        totalResults:
          type: integer
          format: int32
        totalThisPage:
          type: integer
          format: int32
        pageResults:
          type: array
          items:
            $ref: '#/components/schemas/UserListViewModel'
          nullable: true
      additionalProperties: false
    PatchLeadForm:
      type: object
      properties:
        customerName:
          type: string
          nullable: true
        moveDate:
          type: string
          description: 'Format example: "yyyy-MM-dd".'
          format: date
          nullable: true
        utmInformation:
          allOf:
            - $ref: '#/components/schemas/UtmInformationViewModel'
          nullable: true
        emailAddress:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        phoneType:
          allOf:
            - $ref: '#/components/schemas/PhoneType'
          nullable: true
        branchId:
          type: string
          format: uuid
          nullable: true
        referralSourceId:
          type: string
          format: uuid
          nullable: true
        salesPersonId:
          type: string
          format: uuid
          nullable: true
        serviceTypeId:
          allOf:
            - $ref: '#/components/schemas/JobType'
          nullable: true
        moveSizeId:
          type: string
          format: uuid
          nullable: true
        originAddress:
          allOf:
            - $ref: '#/components/schemas/GeocodedAddress'
          nullable: true
        destinationAddress:
          allOf:
            - $ref: '#/components/schemas/GeocodedAddress'
          nullable: true
      additionalProperties: false
    PaymentCategory:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: '0 = Deposit, 1 = BalanceDue, 2 = Other'
      format: int32
      x-enumNames:
        - Deposit
        - BalanceDue
        - Other
    PaymentSource:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      description: '0 = MobileApp, 1 = WebApp, 2 = CustomerPortal, 3 = ExternalApi'
      format: int32
      x-enumNames:
        - MobileApp
        - WebApp
        - CustomerPortal
        - ExternalApi
    PaymentType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 6
        - 7
        - 8
        - 101
        - 102
        - 103
        - 104
        - 105
        - 106
        - 107
        - 108
        - 109
        - 110
        - 111
        - 112
        - 113
        - 114
        - 115
        - 116
        - 117
        - 118
        - 119
        - 120
      type: integer
      description: '0 = Cash, 1 = Check, 2 = CreditCard, 3 = CCGateway, 6 = BillToAccount, 7 = StorageCredit, 8 = ACH, 101 = Custom01, 102 = Custom02, 103 = Custom03, 104 = Custom04, 105 = Custom05, 106 = Custom06, 107 = Custom07, 108 = Custom08, 109 = Custom09, 110 = Custom10, 111 = Custom11, 112 = Custom12, 113 = Custom13, 114 = Custom14, 115 = Custom15, 116 = Custom16, 117 = Custom17, 118 = Custom18, 119 = Custom19, 120 = Custom20'
      format: int32
      x-enumNames:
        - Cash
        - Check
        - CreditCard
        - CCGateway
        - BillToAccount
        - StorageCredit
        - ACH
        - Custom01
        - Custom02
        - Custom03
        - Custom04
        - Custom05
        - Custom06
        - Custom07
        - Custom08
        - Custom09
        - Custom10
        - Custom11
        - Custom12
        - Custom13
        - Custom14
        - Custom15
        - Custom16
        - Custom17
        - Custom18
        - Custom19
        - Custom20
    PhoneType:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      description: '0 = Mobile, 1 = Home, 2 = Office, 3 = Other'
      format: int32
      x-enumNames:
        - Mobile
        - Home
        - Office
        - Other
    PropertyType:
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 10
        - 101
        - 102
        - 103
        - 104
        - 105
        - 106
        - 107
        - 108
        - 109
        - 110
        - 111
        - 112
        - 113
        - 114
        - 115
        - 116
        - 117
        - 118
        - 119
        - 120
      type: integer
      description: '1 = Apartment, 2 = House, 3 = Commercial, 4 = Storage, 5 = Warehouse, 6 = AssistedLiving, 7 = HighRise, 8 = TownHouse, 10 = Other, 101 = Custom01, 102 = Custom02, 103 = Custom03, 104 = Custom04, 105 = Custom05, 106 = Custom06, 107 = Custom07, 108 = Custom08, 109 = Custom09, 110 = Custom10, 111 = Custom11, 112 = Custom12, 113 = Custom13, 114 = Custom14, 115 = Custom15, 116 = Custom16, 117 = Custom17, 118 = Custom18, 119 = Custom19, 120 = Custom20'
      format: int32
      x-enumNames:
        - Apartment
        - House
        - Commercial
        - Storage
        - Warehouse
        - AssistedLiving
        - HighRise
        - TownHouse
        - Other
        - Custom01
        - Custom02
        - Custom03
        - Custom04
        - Custom05
        - Custom06
        - Custom07
        - Custom08
        - Custom09
        - Custom10
        - Custom11
        - Custom12
        - Custom13
        - Custom14
        - Custom15
        - Custom16
        - Custom17
        - Custom18
        - Custom19
        - Custom20
    QuoteAddJobForm:
      required:
        - serviceType
      type: object
      properties:
        serviceType:
          allOf:
            - $ref: '#/components/schemas/JobType'
      additionalProperties: false
    ReferralSourceViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        isLeadProvider:
          type: boolean
        isPublic:
          type: boolean
      additionalProperties: false
    RoomForm:
      required:
        - name
        - roomTypeId
      type: object
      properties:
        name:
          maxLength: 50
          minLength: 1
          type: string
        roomTypeId:
          type: string
          format: uuid
      additionalProperties: false
    RoomTypesViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
      additionalProperties: false
    SalesPersonViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
      additionalProperties: false
    SecondaryPhoneNumber:
      type: object
      properties:
        phoneNumber:
          type: string
          nullable: true
        phoneType:
          allOf:
            - $ref: '#/components/schemas/PhoneType'
          nullable: true
      additionalProperties: false
    ServiceTypeViewModel:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/JobType'
        name:
          type: string
          nullable: true
        scalingFactorPercentage:
          type: integer
          format: int32
        hasActivityLoading:
          type: boolean
        hasActivityFinishedLoading:
          type: boolean
        hasActivityUnloading:
          type: boolean
        order:
          type: integer
          format: int32
      additionalProperties: false
    SmApplications:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
      type: integer
      description: '0 = OfficeWebApp, 1 = CrewApp, 2 = PreMoveSurveyApp, 3 = DescriptiveInventoryApp, 4 = CustomerPortal, 5 = ExternalApi'
      format: int32
      x-enumNames:
        - OfficeWebApp
        - CrewApp
        - PreMoveSurveyApp
        - DescriptiveInventoryApp
        - CustomerPortal
        - ExternalApi
    StopType:
      enum:
        - 0
        - 1
      type: integer
      description: '0 = PickUp, 1 = DropOff'
      format: int32
      x-enumNames:
        - PickUp
        - DropOff
    StorageAccountPaymentViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        storageAccountId:
          type: string
          format: uuid
        source:
          allOf:
            - $ref: '#/components/schemas/PaymentSource'
        paymentType:
          allOf:
            - $ref: '#/components/schemas/PaymentType'
        createdAtUtc:
          type: string
          format: date-time
        amount:
          type: number
          format: double
        balance:
          type: number
          format: double
        takenByUserId:
          type: string
          format: uuid
        description:
          type: string
          nullable: true
        gatewayPaymentId:
          type: string
          nullable: true
        refundsPaymentId:
          type: string
          format: uuid
          nullable: true
        amountRefunded:
          type: number
          format: double
        isRefund:
          type: boolean
          readOnly: true
      additionalProperties: false
    StorageAccountStatus:
      enum:
        - 1
        - 5
        - 11
      type: integer
      description: '1 = Creating, 5 = Active, 11 = Closed'
      format: int32
      x-enumNames:
        - Creating
        - Active
        - Closed
    StorageBillingPreOrPostPay:
      enum:
        - 5
        - 10
      type: integer
      description: '5 = PrePay, 10 = PostPay'
      format: int32
      x-enumNames:
        - PrePay
        - PostPay
    StorageDiscountType:
      enum:
        - 0
        - 1
      type: integer
      description: '0 = Recurring, 1 = OneTime'
      format: int32
      x-enumNames:
        - Recurring
        - OneTime
    StorageType:
      enum:
        - 0
        - 1
      type: integer
      description: '0 = SIT, 1 = Permanent'
      format: int32
      x-enumNames:
        - SIT
        - Permanent
    StorageValuationMethod:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: '0 = ByCWT, 1 = ByFlatRate, 2 = ByCubicFoot'
      format: int32
      x-enumNames:
        - ByCWT
        - ByFlatRate
        - ByCubicFoot
    TariffBranchViewModel:
      type: object
      properties:
        branchId:
          type: string
          format: uuid
        branchName:
          type: string
          nullable: true
      additionalProperties: false
    TariffListViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        isEnabled:
          type: boolean
        appliesToOpportunityTypes:
          type: array
          items:
            $ref: '#/components/schemas/OpportunityType'
          nullable: true
        appliesToBranches:
          type: array
          items:
            $ref: '#/components/schemas/TariffBranchViewModel'
          nullable: true
      additionalProperties: false
    TariffMaterialsViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        rate:
          type: number
          format: double
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        packTimeInMinutes:
          type: integer
          format: int32
          nullable: true
        unpackTimeInMinutes:
          type: integer
          format: int32
          nullable: true
        carrierPackShortCode:
          type: integer
          format: int32
        packByOwnerShortCode:
          type: integer
          format: int32
        cost:
          type: number
          format: double
          nullable: true
        volume:
          type: number
          format: double
          nullable: true
        weight:
          type: number
          format: double
          nullable: true
        sortOrder:
          type: integer
          format: int32
      additionalProperties: false
    TariffViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
      additionalProperties: false
    TaskItemStatus:
      enum:
        - 1
        - 2
        - 3
      type: integer
      description: '1 = NotStarted, 2 = InProgress, 3 = Completed'
      format: int32
      x-enumNames:
        - NotStarted
        - InProgress
        - Completed
    TaskItemType:
      enum:
        - 1
        - 2
        - 9
      type: integer
      description: '1 = PhoneCall, 2 = Email, 9 = Todo'
      format: int32
      x-enumNames:
        - PhoneCall
        - Email
        - Todo
    TaskItemViewModel:
      type: object
      properties:
        title:
          type: string
          nullable: true
        customer:
          allOf:
            - $ref: '#/components/schemas/OpportunityCustomerViewModel'
          nullable: true
        assignedTo:
          allOf:
            - $ref: '#/components/schemas/AppUserViewModel'
          nullable: true
        taskItemType:
          allOf:
            - $ref: '#/components/schemas/TaskItemType'
        taskItemStatus:
          allOf:
            - $ref: '#/components/schemas/TaskItemStatus'
        notes:
          type: string
          nullable: true
      additionalProperties: false
    UpdateJobNotesForm:
      type: object
      properties:
        crewNotes:
          type: string
          nullable: true
        customerNotes:
          type: string
          nullable: true
        internalNotes:
          type: string
          nullable: true
        accountingNotes:
          type: string
          nullable: true
        dispatcherNotes:
          type: string
          nullable: true
      additionalProperties: false
    UpdateJobStopForm:
      required:
        - addressFullAddress
        - order
        - propertyType
        - stopType
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: true
        isOrigin:
          type: boolean
        isDestination:
          type: boolean
        order:
          type: integer
          format: int32
        addressFullAddress:
          minLength: 1
          type: string
        addressLat:
          type: number
          format: double
          nullable: true
        addressLng:
          type: number
          format: double
          nullable: true
        addressUnit:
          type: string
          nullable: true
        propertyName:
          type: string
          nullable: true
        propertyType:
          allOf:
            - $ref: '#/components/schemas/PropertyType'
        stopType:
          allOf:
            - $ref: '#/components/schemas/StopType'
        stairs:
          type: integer
          format: int32
        hasElevator:
          type: boolean
        notes:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        zip:
          type: string
          nullable: true
        county:
          type: string
          nullable: true
      additionalProperties: false
    UpdateLeadResponse:
      type: object
      properties:
        leadId:
          type: string
          format: uuid
      additionalProperties: false
    UpdateOpportunityForm:
      type: object
      properties:
        moveSizeId:
          type: string
          format: uuid
          nullable: true
        salesPersonId:
          type: string
          format: uuid
          nullable: true
        branchId:
          type: string
          format: uuid
          nullable: true
        opportunityType:
          allOf:
            - $ref: '#/components/schemas/OpportunityType'
          nullable: true
        volume:
          type: number
          format: double
          nullable: true
        weight:
          type: number
          format: double
          nullable: true
        isBinding:
          type: boolean
          nullable: true
        depositAmount:
          type: number
          format: double
          nullable: true
        referralSourceId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    UserBranchViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
      additionalProperties: false
    UserListViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        primaryBranch:
          allOf:
            - $ref: '#/components/schemas/UserBranchViewModel'
          nullable: true
        role:
          allOf:
            - $ref: '#/components/schemas/UserRoleViewModel'
          nullable: true
      additionalProperties: false
    UserRoleViewModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
      additionalProperties: false
    UtmInformationViewModel:
      type: object
      properties:
        utmAdGroup:
          type: string
          description: Identifies the ad group within a campaign for more granular performance analysis.
          nullable: true
        utmCampaign:
          type: string
          description: Specifies the marketing campaign name to track the overall performance of that campaign.
          nullable: true
        utmContent:
          type: string
          description: Helps differentiate ads or links that point to the same URL but have different content.
          nullable: true
        utmCustomTracking:
          type: string
          description: 'Allows for tracking custom parameters specific to your marketing needs, not covered by standard UTM parameters.'
          nullable: true
        utmKeyword:
          type: string
          description: 'Indicates the keywords for this ad or content, used mainly in paid search campaigns.'
          nullable: true
        utmMedium:
          type: string
          description: 'Describes the marketing medium used, such as email, social, cpc, etc., to identify how visitors are getting to your site.'
          nullable: true
        utmSource:
          type: string
          description: 'Specifies the source of the traffic, such as a search engine, newsletter, or other referral.'
          nullable: true
      additionalProperties: false
    VolumeWeightCalculationMode:
      enum:
        - 0
        - 1
        - 2
      type: integer
      description: '0 = MoveSize, 1 = Inventory, 2 = Manual'
      format: int32
      x-enumNames:
        - MoveSize
        - Inventory
        - Manual
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: x-api-key
      in: header
    apiKeyQuery:
      type: apiKey
      name: api-key
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]